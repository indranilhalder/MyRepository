<?xml version="1.0" encoding="UTF-8"?>
<!-- [y] hybris Platform Copyright (c) 2000-2013 hybris AG All rights reserved. 
	This software is the confidential and proprietary information of hybris ("Confidential 
	Information"). You shall not disclose such Confidential Information and shall 
	use it only in accordance with the terms of the license agreement you entered 
	into with hybris. -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd">
	<!-- return ,cancel and refund -->
	<alias alias="returnService" name="mplDefaultReturnService" />
	<bean id="mplDefaultReturnService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MPLDefaultReturnService"
		parent="defaultReturnService" scope="tenant">
		<property name="generator" ref="defaultRMAGenerator" />
		<property name="refundService" ref="refundService" />
		<property name="modificationHandler" ref="orderReturnRecordsHandler" />
		<property name="returnableChecks">
			<list>
				<ref bean="defaultChecksExistingReturnEntry" />
				<ref bean="mplConsignmentBasedReturnableCheck" />
			</list>
		</property>
		<property name="replacementOrderDao" ref="replacementOrderDao" />
		<property name="returnRequestDao" ref="returnRequestDao" />
	</bean>

	<bean id="mplConsignmentBasedReturnableCheck"
		class="com.tisl.mpl.marketplacecommerceservices.strategy.MPLDefaultConsignmentBasedReturnableCheck"
		parent="abstractBusinessService" scope="tenant">
	</bean>

	<!-- Price and Stock Level Dao and Service -->

	<!-- PDP buybox -->
	<!-- PDP buybox end -->
	<!-- PDP RestrictedPincode start -->
	<bean id="mplPincodeRestrictionService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplPincodeRestrictionServiceImpl">
		<!-- <property name="commerceProductService" ref="commerceProductService" 
			/> -->
	</bean>

	<bean id="mplPincodeRestrictionDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplPincodeRestrictionDaoImpl">
	</bean>

	<bean id="mplDeliveryInformationService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplDeliveryInformationServiceImpl">
	</bean>

	<bean id="mplDeliveryInformationDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplDeliveryInformationDaoImpl">
	</bean>
<!-- Optimization Fix PDP Start -->
<bean id="mplMediDao"
		class="com.tils.mpl.media.impl.MplMediaDaoImpl">
	</bean>
	
	<bean id="mplMediService"
		class="com.tils.mpl.media.impl.MplMediaServiceImpl">
	</bean>
<!-- Optimization Fix PDP End -->
	<!-- PDP RestrictedPincode end -->
	<!-- The hybris platform provides one single Spring application context 
		for beans located at the jalo layer. Each extension can add beans to this 
		context by specifying them at this configuration file. You can use and/or 
		redefine beans defined at configuration files of other extensions as well 
		as adding new one. If you want to locate this file at a different location 
		or want to use several files for better, structuring, please use the '<yourextension>.application-context' 
		property at your project.properties file. There you can specify a comma separated 
		list of files where first is tried to find a file per classpath and then 
		per file system. If you want to configure beans for your web module please 
		have a look at your web/webroot/WEB-INF/<extname>-web-spring.xml. -->

	<!-- Example how to override a manager -->
	<!-- <bean id="core.productManager" class="com.tisl.mpl.jalo.MarketplacecommerceservicesProductManager" 
		init-method="init" destroy-method="destroy" /> -->


	<!-- Example how to configure the class to use for jalo session creation -->
	<!-- <bean id="jalosession" class="de.hybris.platform.jalo.JaloSessionFactory"> 
		<property name="targetClassName" value="com.tisl.mpl.jalo.MarketplacecommerceservicesJaloSession"/> 
		</bean> -->


	<!-- Example how to override an item -->
	<!-- <bean id="de.hybris.platform.jalo.product.Product" class="com.tisl.mpl.jalo.MarketplacecommerceservicesProduct" 
		scope="prototype" /> -->

	<!-- Example how to register and use an AOP aspect Also see http://static.springframework.org/spring/docs/2.5.x/reference/aop.html -->

	<!-- <bean id="marketplacecommerceservicesProfBean" class="com.tisl.mpl.aop.MarketplacecommerceservicesProfilingAspect"/> 
		<aop:config proxy-target-class="true"> <aop:aspect id="marketplacecommerceservicesProfAspect" 
		ref="marketplacecommerceservicesProfBean" > <aop:pointcut id="profiledMethods" 
		expression="execution(* getModificationTime(..))" /> <aop:around pointcut-ref="profiledMethods" 
		method="profile" /> </aop:aspect> </aop:config> -->


	<!-- some other examples of a pointcut that matches everything: <aop:pointcut 
		id="profiledMethods" expression="bean(de.hybris.platform.jalo.user.Customer) 
		&amp;&amp; !execution(* getPK(..))" /> <aop:pointcut id="profiledMethods" 
		expression="execution(* *(..))" /> -->
	<alias name="defaultCommerceSearchQueryPageableConverter" alias="commerceSearchQueryPageableConverter" />
	<bean id="defaultCommerceSearchQueryPageableConverter" parent="abstractPopulatingConverter">
		<property name="targetClass"
			value="de.hybris.platform.commerceservices.search.solrfacetsearch.data.SolrSearchRequest" />
		<property name="populators">
			<list>
				<ref bean="extCommerceSearchSolrQueryPopulator" />
				<ref bean="commerceSearchPagePopulator" />
				<ref bean="commerceSearchSortPopulator" />
				<ref bean="commerceSearchTextPopulator" />
				<ref bean="commerceSearchFiltersPopulator" />
			</list>
		</property>
	</bean>

	<alias name="extDefaultCommerceSearchSolrQueryPopulator" alias="extCommerceSearchSolrQueryPopulator" />
	<bean id="extDefaultCommerceSearchSolrQueryPopulator" class="com.tisl.mpl.solr.search.ExtSearchSolrQueryPopulator">
		<property name="catalogVersionService" ref="catalogVersionService" />
		<property name="baseSiteService" ref="baseSiteService" />
		<property name="facetSearchConfigConverter" ref="solrFacetSearchConfigConverter" />
		<property name="commonI18NService" ref="commonI18NService" />
		<property name="baseStoreService" ref="baseStoreService" />
		<property name="solrFacetSearchConfigSelectionStrategy" ref="solrFacetSearchConfigSelectionStrategy" />

	</bean>

	<bean id="mplPriceRowService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplPriceRowServiceImpl" />

	<bean id="mplNotificationSaveService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplNotificationServiceImpl" >
		<property name="businessProcessService" ref="businessProcessService"/>  <!-- Added for TPR-1348 AutorefundInitiated -->
		<property name="sendSMSService" ref="sendSMSService" />     <!-- Added for TPR-1348 AutorefundInitiated -->
	</bean>



	<bean id="mplPriceRowDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplPriceRowDaoImpl">
	</bean>
	
	<alias name="mplSearchSolrQueryTypeFacetsPopulator" alias="mplSearchSolrQueryTypeFacetsPopulator" />
		<bean id="mplSearchSolrQueryTypeFacetsPopulator" class="com.tisl.mpl.solr.search.MplSearchSolrQueryTypeFacetsPopulator">
	</bean>
	
	<bean parent="modifyPopulatorList">
		<property name="list" ref="commerceSearchQueryPageableConverter"/>
		<property name="add" ref="mplSearchSolrQueryTypeFacetsPopulator"/>
	</bean>



	<bean id="mplStockService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplStockServiceImpl" />
	<bean id="mplStockLevelDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplStockDaoImpl" />

	<bean id="defaultPromotionManager" class="com.tisl.mpl.jalo.DefaultPromotionManager" />

	<!-- PromotionPriorityInterceptor starts -->
	<bean id="PromotionPriorityInterceptor" class="com.tisl.mpl.interceptor.PromotionPriorityInterceptor">
		<property name="modelService" ref="modelService" />
	</bean>

	<bean id="PromotionPriorityInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="PromotionPriorityInterceptor" />
		<property name="typeCode" value="AbstractPromotion" />
	</bean>

	<!-- PromotionPriorityInterceptor ends -->
	<!-- PriceRowPromotionInterceptor starts -->
	<bean id="priceRowUpdateInterceptor" class="com.tisl.mpl.interceptor.PriceRowUpdateInterceptor">
		<property name="modelService" ref="modelService" />
	</bean>

	<bean id="priceRowUpdateInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="priceRowUpdateInterceptor" />
		<property name="typeCode" value="PriceRow" />
	</bean>

    <!-- For Bulk Product Upload on HMC Configuration Screen -->
	<bean id="productPromotionInterceptor" class="com.tisl.mpl.interceptor.ProductPromotionInterceptor">

	</bean>

	<bean id="productPromotionInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="productPromotionInterceptor" />
		<property name="typeCode" value="ProductPromotion" />
	</bean>
	
	<!-- PR-15 starts here -->
	<!-- For Bulk Product Upload on HMC Configuration Screen -->
	<bean id="orderPromotionInterceptor" class="com.tisl.mpl.interceptor.OrderPromotionInterceptor">
	</bean>

	<bean id="orderPromotionInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="orderPromotionInterceptor" />
		<property name="typeCode" value="OrderPromotion" />
	</bean>
	<!-- PR-15 ends here -->
	
	<!-- PriceRowPromotionInterceptor ends -->
	<!-- DeliveryModeInterceptor Start -->
	<!-- <bean id="deliveryModeCreateInterceptor" class="com.tisl.mpl.interceptor.DeliveryModeCreateInterceptor"> 
		<property name="deliveryModeService" ref="deliveryModeService" /> <property 
		name="modelService" ref="modelService" /> </bean> -->

	<!-- <bean id="deliveryModeInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping"> 
		<property name="interceptor" ref="deliveryModeCreateInterceptor" /> <property 
		name="typeCode" value="RichAttribute" /> </bean> -->

	<!-- DeliveryModeInterceptor End -->

	<!-- AddProductCategoryInterceptor Start -->
	<bean id="addproductcategoryinterceptor" class="com.tisl.mpl.interceptor.AddProductCategoryInterceptor">
	</bean>

	<bean id="addProductCategoryInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="addproductcategoryinterceptor" />
		<property name="typeCode" value="Product" />
	</bean>

	<!-- AddProductCategoryInterceptor End -->
<!-- HasVariantProductForFineJewellery for Fine Jewellery Start -->
   <bean id="addHasVariantForFineJewelleryInterceptor" class="com.tisl.mpl.interceptor.AddHasVariantForFineJewelleryInterceptor">
	</bean>

     <bean id="addHasVariantForFineJewelleryInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="addHasVariantForFineJewelleryInterceptor" />
		<property name="typeCode" value="SellerInformation" />
		
	</bean>
<!-- HasVariantProductForFineJewellery for Fine Jewellery End -->

	<!-- AddProductCategoryInterceptor Start -->
	<bean id="addProductColorHexCodeInterceptor"
		class="com.tisl.mpl.interceptor.AddProductColorHexCodeInterceptor">
	</bean>

	<bean id="addProductColorHexCodeInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="addProductColorHexCodeInterceptor" />
		<property name="typeCode" value="Product" />
	</bean>

	<!-- AddProductCategoryInterceptor End -->

	<!-- Order Notification model Start -->

	<bean id="notificationgeneratorInterceptor"
		class="com.tisl.mpl.interceptor.NotificationgeneratorInterceptor">
		<property name="modelService" ref="modelService" />
	</bean>

	<bean id="notificationGeneratorConsignmentInterceptor"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="notificationgeneratorInterceptor" />
		<property name="typeCode" value="Consignment" />

	</bean>

	<!-- <bean id="notificationGeneratorOrderInterceptor" -->
	<!-- class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping"> -->
	<!-- <property name="interceptor" ref="notificationgeneratorInterceptor" 
		/> -->
	<!-- <property name="typeCode" value="Order" /> -->
	<!-- </bean> -->

	<!-- Customer Facing Status Start -->
	<bean id="customerFacingStatusInterceptor"
		class="com.tisl.mpl.interceptor.CustomerFacingStatusInterceptor">
	</bean>


	<bean id="customerFacingStatusGeneratorConsignmentInterceptor"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="customerFacingStatusInterceptor" />
		<property name="typeCode" value="OrderStatusNotification" />
	</bean>
	<!-- Customer Facing Status End -->


	<!-- Order Notification model End -->


	<bean id="helpMeShopService"
		class="com.tisl.mpl.marketplacecommerceservices.service.helpmeshop.impl.DefaultHelpMeShopServiceImpl">
		<property name="helpMeShopDao" ref="helpMeShopDao" />
	</bean>

	<bean id="helpMeShopDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.DefaultHelpMeShopDaoImpl">
	</bean>
	<bean id="mplEnumerationHelper" class="com.tisl.mpl.helper.MplEnumerationHelper"></bean>

	<bean id="mplSellerInformationService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplSellerInformationServiceImpl">
	</bean>

	<bean id="mplSellerInformationDAO"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplSellerInformationDAOImpl">
	</bean>
	<alias alias="categoryService" name="mplCategoryServiceImpl" />
	<bean id="mplCategoryServiceImpl"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplCategoryServiceImpl"
		parent="defaultCategoryService">
		<property name="mplCategoryDao" ref="mplCategoryDao" />
	</bean>
	<alias alias="mplCategoryDao" name="mplCategoryDaoImpl" />
	<bean id="mplCategoryDaoImpl"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplCategoryDaoImpl">
		<property name="flexibleSearchService" ref="flexibleSearchService" />
		<property name="modelService" ref="modelService" />
	</bean>

	<alias alias="checkInvoice" name="checkInvoice" />
	<bean id="checkInvoice"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplCheckInvoiceImpl">
		<property name="flexibleSearchService" ref="flexibleSearchService" />
	</bean>

	<!-- For brand list -->
	<bean id="brandService"
		class="com.tisl.mpl.marketplacecommerceservices.service.brand.impl.DefaultBrandService">
	</bean>
	<bean id="brandDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.brand.impl.DefaultBrandDao">
		<property name="flexibleSearchService" ref="flexibleSearchService" />
		<property name="modelService" ref="modelService" />
	</bean>

	<alias alias="extDefaultCustomerService" name="extDefaultCustomerService" />
	<bean id="extDefaultCustomerService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.ExtDefaultCustomerServiceImpl"
		parent="defaultCustomerAccountService" scope="tenant" >
		<property name="passwordEncoding" value="${default.password.encoder.key}"/>
		</bean>

	<bean id="genotpservice" autowire="byName"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.GenerateOTPServiceImpl">
		<property name="modelService" ref="modelService"></property>
		<property name="extendedUserService" ref="extendedUserService"></property>
	</bean>
	<bean id="generateOTPDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.GenerateOTPDaoImpl">
	</bean>

	<bean id="extendedUserService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.ExtendedUserServiceImpl"
		parent="defaultUserService" scope="tenant" />
	<bean id="extendedUserDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.ExtendedUserDaoImpl"
		scope="tenant" />



	<bean id="extendedCustomerEmailResolutionService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.ExtendedCustomerEmailResolutionService">
		<property name="configurationService" ref="configurationService"></property>
	</bean>

	<bean id="forgetPasswordService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.ForgetPasswordServiceImpl">
		<property name="tokenValiditySeconds" value="1800" />
		<property name="signatureKeyHex"
			value="#{configurationService.configuration.getProperty('commerceservices.securetoken.signature-key')}" />
		<property name="encryptionKeyHex"
			value="#{configurationService.configuration.getProperty('commerceservices.securetoken.encryption-key')}" />
	</bean>

	<bean id="forgetPasswordDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.ForgetPasswordDaoImpl">
	</bean>

	<!-- ============== Customer Id Generation ============== -->
	<bean id="customerOriginalUIDPrepareMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="extCustomerOriginalUIDInterceptor" />
		<property name="typeCode" value="customer" />
		<property name="replacedInterceptors" ref="customerOriginalUIDPrepareInterceptor" />
	</bean>

	<bean id="extCustomerOriginalUIDInterceptor"
		class="com.tisl.mpl.interceptors.ExtCustomerOriginalUIDInterceptor">
		<!-- <property name="modelService" ref="modelService" /> -->
	</bean>

	<!-- Prodcut Service Implementation -->
 	<alias name="mplProductService" alias="mplProductService" />
 	<bean id="mplProductService"
 		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplProductServiceImpl">
 		<property name="productDao" ref="productDao" />
 	</bean>

	<!-- ============== Update Profile Service & DAO ============== -->
	<bean id="mplCustomerProfileDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplCustomerProfileDaoImpl">
	</bean>
	<bean id="mplCustomerProfileService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplCustomerProfileServiceImpl">
	</bean>

	<alias name="otpGenericService" alias="otpGenericService" />
	<bean id="otpGenericService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.OTPGenericServiceImpl">
		<property name="otpDao" ref="otpDao" />
		<property name="modelservice" ref="modelService" />
		<property name="userService" ref="userService" />
		<property name="configurationService" ref="configurationService" />

	</bean>
	<bean id="otpDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.OTPDaoImpl" />



	<!-- ============== configure beans for pincode ============== -->
		
		<alias name="pincodeService" alias="pincodeService" />
	<bean id="pincodeService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.PincodeServiceImpl">
		<property name="pincodeDao" ref="pincodeDao" />
		
	</bean>
	<bean id="pincodeDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.PincodeDaoImpl" >
		<property name="flexibleSearchService" ref="flexibleSearchService" />
	</bean>


	<!-- Payment DAO and Service Implementation -->
	<alias name="mplPaymentService" alias="mplPaymentService" />
	<bean id="mplPaymentService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplPaymentServiceImpl">
		<property name="mplPaymentDao" ref="mplPaymentDao" />
		<property name="discountUtility" ref="discountUtility" />
		<property name="mplJusPayRefundService" ref="mplJusPayRefundService" /> <!-- Added for TPR-1348 AutoReefundInitiate -->
		<property name="mplMWalletRefundService" ref="mplMWalletRefundService" />  <!-- Added for TPR-1348 AutoReefundInitiate -->
	</bean>


	<alias name="mplPaymentDao" alias="mplPaymentDao" />
	<bean id="mplPaymentDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplPaymentDaoImpl">
		<property name="flexibleSearchService" ref="flexibleSearchService" />
	</bean>
	<!-- Payment Ends -->

	<!-- Blacklist Service and DAO Implementation -->
	<bean id="blacklistService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.BlacklistServiceImpl">
		<property name="blacklistDao" ref="blacklistDao" />
		<property name="userService" ref="userService" />
	</bean>

	<bean id="blacklistDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.BlacklistDaoImpl">
	</bean>
	<!-- Blacklist Service and DAO Implementation ends -->


	<!-- SellerReport Service and Service Implementation  -->
	
	<bean id="mplSellerPriorityReportService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplSellerPriorityReportServiceImpl">
	</bean>
	<!-- SellerReport Service and Service Implementation  ends -->
	
	<!-- SellerReport Service and DAO Implementation -->
		
	<bean id="mplSellerPriorityReportDAO"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplSellerPriorityReportDAOImpl">
	</bean>
	
	<!-- SellerReport Service and DAO Implementation  ends -->
	
	
	<alias alias="cODPaymentService" name="mplCODPaymentServiceImpl" />
	<bean id="mplCODPaymentServiceImpl"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.CODPaymentServiceImpl">
		<property name="modelService" ref="modelService" />
		<property name="configurationService" ref="configurationService" />
	</bean>
	
	<alias alias="jusPayPaymentService" name="jusPayPaymentServiceImpl" />
	<bean id="jusPayPaymentServiceImpl"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.JuspayPaymentServiceImpl">
		<property name="modelService" ref="modelService" />
		<property name="configurationService" ref="configurationService" />
	</bean>

	<alias name="defaultCommerceSolrSearchResponseConverter" alias="commerceSolrSearchResponseConverter" />
	<bean id="defaultCommerceSolrSearchResponseConverter" parent="abstractPopulatingConverter">
		<property name="targetClass"
			value="de.hybris.platform.commerceservices.search.facetdata.ProductCategorySearchPageData" />
		<property name="populators">
			<list>
				<ref bean="commerceSearchResponseQueryPopulator" />
				<ref bean="commerceSearchResponsePaginationPopulator" />
				<ref bean="commerceSearchResponseResultsPopulator" />
				<ref bean="commerceSearchResponseFacetsPopulator" />
				<ref bean="commerceSearchResponseFacetFilterPopulator" />
				<ref bean="commerceSearchResponseFacetSortPopulator" />
				<ref bean="commerceSearchResponseBreadcrumbsPopulator" />
				<ref bean="commerceSearchResponseSortsPopulator" />
				<ref bean="commerceSearchResponseFreeTextSearchPopulator" />
				<ref bean="commerceSearchResponseCategoryCodePopulator" />
				<ref bean="commerceSearchResponseSellerIDPopulator" />
				<ref bean="commerceSearchResponseOfferIDPopulator" />
				<ref bean="commerceSearchResponseOfferCategoryIDPopulator" />
				<ref bean="commerceSearchResponseSubCategoriesPopulator" />
				<ref bean="commerceSearchResponseSpellingSuggestionPopulator" />
				<ref bean="commerceSearchResponseKeywordRedirectPopulator" />
				<ref bean="commerceSearchResponseBrandPopulator" />
			</list>
		</property>
	</bean>

	<alias name="mplSearchResponseSubCategoriesPopulator" alias="commerceSearchResponseSubCategoriesPopulator" />
	<bean id="mplSearchResponseSubCategoriesPopulator"
		class="com.tisl.mpl.solr.search.MplSearchResponseSubCategoriesPopulator">
		<property name="commerceCategoryService" ref="commerceCategoryService" />
	</bean>

	<alias name="mplCommerceSearchResponseSubBrandPopulator" alias="commerceSearchResponseBrandPopulator" />
	<bean id="mplCommerceSearchResponseSubBrandPopulator"
		class="com.tisl.mpl.solr.search.MplSearchResponseSubBrandPopulator">
		<property name="commerceCategoryService" ref="commerceCategoryService" />
	</bean>


	<alias name="mplDefaultCommerceUpdateCartEntryStrategy" alias="commerceUpdateCartEntryStrategy" />
	<bean id="mplDefaultCommerceUpdateCartEntryStrategy" parent="defaultCommerceUpdateCartEntryStrategy"
		class="com.tisl.mpl.strategy.service.impl.MplDefaultCommerceUpdateCartEntryStrategy">
		<property name="commerceUpdateCartEntryHooks" ref="commerceUpdateCartEntryMethodHooks" />
		<property name="configurationService" ref="configurationService" />
	</bean>

	<alias name="mplDefaultCommerceAddToCartStrategyImpl" alias="commerceAddToCartStrategy" />
	<bean id="mplDefaultCommerceAddToCartStrategyImpl"
		class="com.tisl.mpl.strategy.service.impl.MplDefaultCommerceAddToCartStrategyImpl"
		parent="defaultCommerceAddToCartStrategy">
		<property name="commerceAddToCartMethodHooks" ref="commerceAddToCartMethodHooks" />
		<property name="configurationService" ref="configurationService" />
	</bean>


	<alias name="mplCommerceCartService" alias="commerceCartService" />
	<bean id="mplCommerceCartService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplCommerceCartServiceImpl"
		parent="defaultCommerceCartService">
		<property name="keyGenerator"
			ref="#{configurationService.configuration.getProperty('commerceservices.orderCode.keyGenerator')}" />
		<property name="mplCommerceCartDao" ref="mplCommerceCartDao" />
		<property name="cartConverter" ref="cartConverter" />
		<!-- CAR:127 -->
		<property name="orderConverter" ref="orderConverter"/>
		<property name="cartModificationConverter" ref="cartModificationConverter" />
		<property name="siteConfigService" ref="siteConfigService" />
		<property name="baseSiteService" ref="baseSiteService" />
		<property name="cartService" ref="cartService" />
		<property name="commerceUpdateCartEntryStrategy" ref="commerceUpdateCartEntryStrategy" />
	</bean>
	
	<!-- agent id for store service -->
	<alias name="defaultAgentIdForStoreService" alias="agentIdForStore" />
	<bean id="defaultAgentIdForStoreService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.AgentIdForStoreImpl">
	</bean>

	<!-- MplCommerceCartDao start -->
	<alias name="mplCommerceCartDao" alias="mplCommerceCartDao" />
	<bean id="mplCommerceCartDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplCommerceCartDaoImpl">
		<property name="flexibleSearchService" ref="flexibleSearchService" />
	</bean>
	<!-- MplCommerceCartDao end -->



	<!-- <bean id="MplOrderServiceImpl" -->
	<!-- class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplOrderServiceImpl" 
		parent="orderService" -->
	<!-- /> -->
	<!-- <bean id="mplOrderSplitBySellerStrategy" class="com.tisl.mpl.core.strategies.impl.MplOrderSplitBySellerStrategyImpl" 
		> </bean> -->
	<bean id="mplColourCache" class="com.tisl.mpl.core.search.provider.helper.MplCache"
		scope="tenant">
		<constructor-arg name="configurationService" ref="configurationService" />
		<constructor-arg name="cacheName" value="MplColourCache" />
	</bean>

	<alias name="extDefaultIndexerService" alias="indexerService" />
	<bean id="extDefaultIndexerService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.ExtDefaultIndexerService">
		<property name="indexerStrategyFactory" ref="indexerStrategyFactory" />
	</bean>

	<!-- Etail-Seller Specific Promotions -->
	<bean id="sellerBasedPromotionDao" class="com.tisl.mpl.promotion.dao.SellerBasedPromotionDaoImpl" />

	<alias name="sellerBasedPromotionService" alias="sellerBasedPromotionService" />
	<bean id="sellerBasedPromotionService"
		class="com.tisl.mpl.promotion.service.SellerBasedPromotionServiceImpl">
		<property name="modelService" ref="modelService" />
		<property name="sellerBasedPromotionDao" ref="sellerBasedPromotionDao" />
	</bean>


	<alias alias="friendsInviteDao" name="defaultFriendsInviteDao" />
	<bean id="defaultFriendsInviteDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.DefaultFriendsInviteDao">
		<constructor-arg value="Product" />
	</bean>
	<alias alias="friendsInviteService" name="defaultFriendsInviteService" />
	<bean id="defaultFriendsInviteService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultFriendsInviteService">
		<property name="modelService" ref="modelService" />
		<property name="friendsInviteDao" ref="friendsInviteDao" />
	</bean>

	<!-- <alias name="mplCommercePlaceOrderStrategyImpl" alias="commercePlaceOrderStrategy" 
		/> <bean id="mplCommercePlaceOrderStrategyImpl" class="com.tisl.mpl.strategy.service.impl.MplCommercePlaceOrderStrategyImpl" 
		parent="defaultCommercePlaceOrderStrategy"> <property name="cloneAbstractOrderStrategy" 
		ref="cloneAbstractOrderStrategy" /> <property name="keyGenerator" ref="#{configurationService.configuration.getProperty('commerceservices.orderCode.keyGenerator')}" 
		/> </bean> -->

	<util:list id="commercePlaceOrderMethodHooks"
		value-type="de.hybris.platform.commerceservices.order.hook.CommercePlaceOrderMethodHook" />
	<alias alias="commercePlaceOrderStrategy" name="defaultCommercePlaceOrderStrategy" />
	<bean id="defaultCommercePlaceOrderStrategy"
		class="com.tisl.mpl.marketplacecommerceservices.strategy.MplCommercePlaceOrderStrategyImpl">
		<property name="paymentService" ref="paymentService" />
		<property name="modelService" ref="modelService" />
		<property name="commonI18NService" ref="commonI18NService" />
		<property name="deliveryService" ref="deliveryService" />
		<property name="orderService" ref="orderService" />
		<property name="baseSiteService" ref="baseSiteService" />
		<property name="baseStoreService" ref="baseStoreService" />
		<property name="promotionsService" ref="promotionsService" />
		<property name="calculationService" ref="calculationService" />
		<property name="externalTaxesService" ref="externalTaxesService" />
		<property name="commercePlaceOrderMethodHooks" ref="commercePlaceOrderMethodHooks" />
		<property name="configurationService" ref="configurationService" />
		<!-- TPR-3782 -->
 		<property name="priceBreakupService" ref="priceBreakupService" />

	</bean>

	<alias name="mplCommerceCheckoutService" alias="commerceCheckoutService" /> 
	<bean id="mplCommerceCheckoutService" class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplDefaultCommerceCheckoutService" 
		parent="defaultCommerceCheckoutService">
	</bean>
	
	<bean id="userLoginService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.UserLoginServiceImpl">
		<property name="userDetailsService" ref="extendedUserDetailsService" />
	</bean>
	<bean id="extendedUserDetailsService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.ExtendedUserDetailsService"
		scope="tenant">
	</bean>
	<alias name="mplUpdatePromotionPriceService" alias="mplUpdatePromotionPriceService" />
	<bean id="mplUpdatePromotionPriceService"
		class="com.tisl.mpl.promotion.service.impl.UpdatePromotionalPriceServiceImpl">
		<property name="modelService" ref="modelService" />
		<property name="updateSplPriceHelperService" ref="updateSplPriceHelperService" />	
	</bean>

	<alias name="mplUpdatePromotionPriceDao" alias="mplUpdatePromotionPriceDao" />
	<bean id="mplUpdatePromotionPriceDao"
		class="com.tisl.mpl.promotion.dao.impl.UpdatePromotionalPriceDaoImpl" />

	<bean id="mplWishlistService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplWishlistServiceImpl">
	</bean>
	<bean id="promotionUtilityPOJO" class="com.tisl.mpl.jalo.PromotionUtilityPOJO" />

	<!--PDP buyBox Price data -->

	<bean id="buyBoxService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.BuyBoxServiceImpl">
		<property name="buyBoxDao" ref="buyBoxDao" />
		<property name="configurationService" ref="configurationService" />
	</bean>

	<bean id="buyBoxDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.BuyBoxDaoImpl">
		<property name="flexibleSearchService" ref="flexibleSearchService" />
		<property name="modelService" ref="modelService" />
	</bean>

	<!-- CartModelSave Interceptor starts -->
	<bean id="CartSaveInterceptor" class="com.tisl.mpl.interceptor.CartSaveInterceptor" />

	<bean id="CartSaveInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="CartSaveInterceptor" />
		<property name="typeCode" value="AbstractOrder" />		<!-- Changed for TPR-629 -->
	</bean>
	<!-- CartModelSave Interceptor ends -->

	<bean id="wsTicketService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.WsTicketService">
		<property name="sendTicketService" ref="sendTicketService" />
	</bean>
	<bean id="notificationService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.NotificationServiceImpl">
	</bean>

	<bean id="notificationDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.NotificationDaoImpl">
	</bean>

	<bean id="mplOrderService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultMplOrderService">
	</bean>

	<bean id="mplOrderDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.DefaultMplOrderDao">
	</bean>

	<!-- For Promotion XML Generation -->
	<bean id="promoXMLGenerationService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.PromoXMLGenerationServiceImpl">
	</bean>

	<!-- For Promotion XML Generation -->
	<bean id="promoXMLUtility" class="com.tisl.mpl.util.PromoXMLUtility" />
	<bean id="promotionXMLData" class="com.tisl.mpl.pojo.PromotionXMLData" />



	<bean id="extendedEmployeeService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.ExtendedEmployeeServiceImpl"
		parent="defaultUserService" scope="tenant" />

	<bean id="extendedEmployeeDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.ExtendedEmployeeDaoImpl"
		scope="tenant" />



	<!-- buybox cron job execution -->
	<bean id="buyboxCronJob"
		class="com.tisl.mpl.marketplacecommerceservices.jobs.BuyBoxCronJob"
		autowire="byName">
		<property name="buyBoxService" ref="buyBoxService"></property>
		<property name="configurationService" ref="configurationService"></property>
	</bean>

	<!-- For Customer Details Fetch job -->
	<bean id="customerDetailsPopulateJob" class="com.tisl.mpl.integration.job.CustomerDetailsPopulateJob"
		autowire="byName" />
	<bean id="fetchCustomerDetailsDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.FetchCustomerDetailsDaoImpl" />

	<bean id="fetchCustomerDetailsServiceImpl"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.FetchCustomerDetailsServiceImpl">
		<property name="modelService" ref="modelService" />
		<property name="fetchCustomerDetailsDao" ref="fetchCustomerDetailsDao" />
	</bean>
	<bean id="customerXMLUtlity" class="com.tisl.mpl.integration.job.CustomerXMLUtlity" />
	<bean id="mplCustomerXMLData" class="com.tisl.mpl.pojo.MplCustomerXMLData" />
	<bean id="mplBulkCustomerXMlData" class="com.tisl.mpl.pojo.MplBulkCustomerXMlData" />

	<!-- Start : checkout journey modification : Delivery cost changes -->
	<alias name="mplDeliveryCostService" alias="mplDeliveryCostService" />

	<bean id="mplDeliveryCostService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplDeliveryCostServiceImpl">
		<property name="mplDeliveryCostDao" ref="mplDeliveryCostDao" />
	</bean>


	<alias name="defaultMplFindDeliveryCostStrategy" alias="findDeliveryCostStrategy" />
	<bean id="defaultMplFindDeliveryCostStrategy"
		class="com.tisl.mpl.marketplacecommerceservices.strategy.impl.DefaultMplFindDeliveryCostStrategy"
		parent="abstractBusinessService" />


	<alias name="mplDeliveryCostDao" alias="mplDeliveryCostDao" />

	<bean id="mplDeliveryCostDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplDeliveryCostDaoImpl">
		<property name="flexibleSearchService" ref="flexibleSearchService" />
	</bean>
	<!-- End : checkout journey modification : Delivery cost changes -->

	<bean id="accountAddressService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultAccountAddressService">
	</bean>

	<bean id="accountAddressDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.DefaultAccountAddressDao">
	</bean>

	<!-- Shop By Look Bean Defination -->
	<bean id="shopByLookDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.ShopByLookDaoImpl">
	</bean>
	<bean id="shopByLookService"
		class="com.tisl.mpl.marketplacecommerceservice.shopbylook.impl.ShopByLookServiceImpl">
	</bean>


	<!-- For Sales Order Payment Info for FICO -->
	<bean id="salesOrderPaymentInfoJob" class="com.tisl.mpl.integration.job.SalesOrderPaymentInfoJob"
		autowire="byName" />
	<bean id="fetchSalesOrderDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.DefaultFetchSalesOrderDaoImpl" />
	<bean id="fetchSalesOrderServiceImpl"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultFetchSalesOrderServiceImpl">
		<property name="modelService" ref="modelService" />
		<property name="fetchSalesOrderDao" ref="fetchSalesOrderDao" />
	</bean>
	<bean id="childOrderXMlData" class="com.tisl.mpl.pojo.ChildOrderXMlData" />
	<bean id="subOrderXMLData" class="com.tisl.mpl.pojo.SubOrderXMLData" />
	<bean id="salesOrderXMLData" class="com.tisl.mpl.pojo.SalesOrderXMLData" />
	<bean id="bulkSalesOrderXMLData" class="com.tisl.mpl.pojo.BulkSalesOrderXMLData" />
	<bean id="salesOrderXMLUtility" class="com.tisl.mpl.integration.job.SalesOrderXMLUtility" />

	<!-- For Sales Order CANCEL Payment Info for FICO -->
	<bean id="salesOrderCancelPaymentInfoJob"
		class="com.tisl.mpl.integration.job.SalesOrderCancelPaymentInfoJob"
		autowire="byName" />
	<bean id="salesOrderCancelXMLUtility"
		class="com.tisl.mpl.integration.job.SalesOrderReverseXMLUtility" />

	<bean id="sizeGuideService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.SizeGuideServiceImpl">
	</bean>
	
	<!-- for price breakup -->
	<bean id="priceBreakupService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.PriceBreakupServiceImpl">
		<property name="jewelleryAttrMapping" ref="jewelleryAttrMapping"></property>
	</bean>
	
	<bean id="priceBreakupDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.PriceBreakupDaoImpl">
	</bean>
	<!-- for price breakup -->
	
	<!-- for merchant master -->
	<bean id="merchantmaster" class="com.tisl.mpl.integration.job.MerchantMaster"
		autowire="byName" />
	<bean id="fetchMerchantMasterDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.DefaultFetchMerchantMasterDaoImpl" />
	<bean id="fetchMerchantMasterServiceImpl"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultFetchMerchantMasterServiceImpl">
		<property name="modelService" ref="modelService" />
		<property name="fetchMerchantMasterDao" ref="fetchMerchantMasterDao" />
	</bean>
	<bean id="merchantMasterXMLUtility" class="com.tisl.mpl.integration.job.MerchantMasterXMLUtility" />

	<alias alias="cmsPageService" name="mplCMSPageService" />
	<bean id="mplCMSPageService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplCMSPageServiceImpl"
		parent="defaultCMSPageService" scope="tenant">
		<property name="mplCmsPageDao" ref="cmsPageDao" />
	</bean>

	<bean id="mplSellerMaster"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplSellerMasterServiceImpl" />
	<bean id="mplSellerMasterDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplSellerMasterDaoImpl" />

	<alias alias="cmsPageDao" name="mplCMSPageDao" />
	<bean id="mplCMSPageDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplCmsPageDaoImpl"
		parent="defaultCMSPageDao" scope="tenant" />
	<!-- for Orde-Splitting Strategy Hook -->

	<bean id="mplCommercePlaceOrderMethodHook"
		class="com.tisl.mpl.commerceservices.order.hook.MplDefaultPlaceOrderCommerceHooks"
		scope="tenant">

		<property name="cloneAbstractOrderStrategy" ref="cloneAbstractOrderStrategy" />
	</bean>
	<util:list id="commercePlaceOrderMethodHooks"
		value-type="de.hybris.platform.commerceservices.order.hook.CommercePlaceOrderMethodHook">
		<ref bean="mplCommercePlaceOrderMethodHook"></ref>

	</util:list>

	<alias alias="orderCancelService" name="defaultOrderCancelService" />
	<bean id="defaultOrderCancelService"
		class="de.hybris.platform.ordercancel.impl.DefaultOrderCancelService"
		scope="tenant">
		<property name="modelService" ref="modelService" />
		<property name="orderCancelDao" ref="orderCancelDao" />
		<property name="orderCancelRecordsHandler" ref="mplDefaultOrderCancelRecordsHandler" />
		<property name="cancelDenialStrategies">
			<list>
				<ref bean="marketplaceOrderCancellationStrategy" />
			</list>
		</property>

		<property name="requestExecutorsMap">
			<map>
				<entry key="PENDINGORHOLDINGAREA" value-ref="mplImmediateCancelRequestExecutor" />
				<entry key="SENTTOWAREHOUSE" value-ref="mplImmediateCancelRequestExecutor" />
				<entry key="SHIPPING" value-ref="mplImmediateCancelRequestExecutor" />
				<entry key="PARTIALLYSHIPPED" value-ref="mplImmediateCancelRequestExecutor" />
			</map>
		</property>
		<property name="responseExecutorsMap">
			<map>
				<entry key="SENTTOWAREHOUSE" value-ref="warehouseResponseExecutor" />
				<entry key="SHIPPING" value-ref="warehouseResponseExecutor" />
				<entry key="PARTIALLYSHIPPED" value-ref="warehouseResponseExecutor" />
			</map>
		</property>
		<property name="stateMappingStrategy" ref="defaultOrderCancelStateMappingStrategy" />
		<property name="cancelableEntriesStrategy" ref="defaultCancelableEntriesStrategy" />
	</bean>



	<bean id="marketplaceOrderCancellationStrategy"
		class="com.tisl.mpl.marketplacecommerceservices.strategy.MarketPlaceOrderCancellationStateStrategy">
		<property name="stateMappingStrategy" ref="stateMappingStrategy" />
		<property name="reason">
			<bean class="de.hybris.platform.ordercancel.DefaultOrderCancelDenialReason">
				<property name="code" value="1" />
				<property name="description"
					value="Order cannot be cancelled because of it's current state" />
			</bean>
		</property>
	</bean>

	<alias name="stateMappingStrategy" alias="defaultOrderCancelStateMappingStrategy" />
	<bean id="stateMappingStrategy"
		class="com.tisl.mpl.marketplacecommerceservices.strategy.MarketPlaceDefaultOrderCancelStateMappingStrategy">
		<property name="nonCancellabelStates">
			<list>
				<value>CANCELLATION_INITIATED</value>
				<value>CLOSED_ON_CANCELLATION</value>
				<value>HOTC</value>
				<value>REACHED_NEAREST_HUB</value>
				<value>OUT_FOR_DELIVERY</value>
				<value>DELIVERED</value>
				<value>UNDELIVERED</value>
				<value>RETURN_TO_ORIGIN</value>
				<value>LOST_IN_TRANSIT</value>
				<value>RETURN_INITIATED</value>
				<value>REVERSE_AWB_ASSIGNED</value>
				<value>RETURN_CANCELLED</value>
				<value>RETURN_RECEIVED</value>
				<value>RETURN_CLOSED</value>
				<value>QC_FAILED</value>
				<value>RETURN_REJECTED</value>
				<value>CLOSED_ON_RETURN_TO_ORIGIN</value>
				<value>COD_CLOSED_WITHOUT_REFUND</value>
				<value>REDISPATCH_INITIATED</value>
				<value>REFUND_INITIATED</value>
				<value>REFUND_IN_PROGRESS</value>
				<value>RETURN_COMPLETED</value>
				<value>ORDER_CANCELLED</value>
			</list>
		</property>
	</bean>

	<alias name="marketPlaceOrderCancelCancelableEntriesStrategy"
		alias="defaultCancelableEntriesStrategy" />
	<bean id="marketPlaceOrderCancelCancelableEntriesStrategy"
		class="com.tisl.mpl.marketplacecommerceservices.strategy.MarketPlaceOrderCancelCancelableEntriesStrategy">
		<property name="cancellableStatus">
			<list>
				<value>ORDER_ALLOCATED</value>
				<!-- New Status ORDER_REALLOCATED added for TISPRD-1382 -->
				<value>ORDER_REALLOCATED</value>
				<value>PENDING_SELLER_ASSIGNMENT</value>
				<value>ORDER_ACCEPTED</value>
				<value>PICK_LIST_GENERATED</value>
				<value>PICK_IN_PROGRESS</value>
				<value>PICK_HOLD</value>
				<value>PICK_CONFIRMED</value>
				<!-- commented by because for packed status cancellation is not possible ( TISUATC-99) -->
				<!-- <value>PACKED</value> -->
				<value>ORDER_REJECTED</value>
				<value>AWB_ASSIGNED</value>
				<value>PRINT_SHIPPING_LABEL</value>
				<value>INVOICE_GENERATED</value>
				<value>PRINT_INVOICE</value>
				<value>MANIFESTO_PENDING</value>
				<value>READY_TO_SHIP</value>
				<value>LOGISTIC_PARTNER_SWITCH</value>
			</list>

		</property>

	</bean>

	<alias name="mplCurrentFactoryFindPricingStrategy" alias="currentFactoryFindPricingStrategy" />
	<bean id="mplCurrentFactoryFindPricingStrategy"
		class="com.tisl.mpl.strategy.service.impl.MplFindPricingWithCurrentPriceFactoryStrategy"
		parent="abstractBusinessService" />

	<bean id="mplJusPayRefundService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultMplJusPayRefundService" />
		
		<!-- Mrupee implementation -->	
	
		<bean id="mplMWalletRefundService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultMplMWalletRefundService" />

	<!-- For Bulk Upload of Promotions -->
	<bean id="promotionCreationJob"
		class="com.tisl.mpl.marketplacecommerceservices.jobs.PromotionCreationJob"
		autowire="byName" />

	<!-- For Delisting of Product -->
	<bean id="delistingJob" class="com.tisl.mpl.core.cronjobs.delisting.DelistingJob"
		autowire="byName" />

	<bean id="mplDelistingDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplDelistingDaoImpl">
	</bean>
	<bean id="mplDelistingService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplDelistingServiceImpl" />
	<bean id="mplDelistingProcessor"
		class="com.tisl.mpl.core.cronjobs.delisting.DelistingProcessorImpl" />
	<bean id="delistErrorHandling"
		class="com.tisl.mpl.core.cronjobs.delisting.DelistingErrorHandling" />




	<!-- For Bulk Upload of Promotions -->
	<bean id="bulkPromotionCreationDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.DefaultBulkPromotionCreationDaoImpl" />
	<bean id="bulkPromotionCreationProcessor"
		class="com.tisl.mpl.promotion.processor.BulkPromotionCreationProcessorImpl">
		<property name="bulkPromotionCreationService" ref="bulkPromotionCreationService" />
		<property name="bulkPromotionRestrictionService" ref="bulkPromotionRestrictionService" />
	</bean>
	<bean id="bulkPromotionErrorHandling"
		class="com.tisl.mpl.promotion.processor.BulkPromotionErrorHandling" />
	<bean id="bulkPromotionCreationService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultBulkPromotionCreationServiceImpl">
		<property name="modelService" ref="modelService" />
		<property name="bulkPromotionCreationDao" ref="bulkPromotionCreationDao" />
	</bean>
	<bean id="bulkPromotionRestrictionService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultBulkPromotionRestrictionServiceImpl">
		<property name="modelService" ref="modelService" />
		<property name="bulkPromotionCreationDao" ref="bulkPromotionCreationDao" />
		<property name="bulkPromotionErrorHandling" ref="bulkPromotionErrorHandling" />
	</bean>

	<!-- bean entry for blacklist report cronjob -->
	<bean id="blacklistReportJob"
		class="com.tisl.mpl.marketplacecommerceservices.jobs.BlacklistReportJob"
		autowire="byName" />


	<bean id="contactUsService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.ContactUsServiceImpl">
		<property name="contactUsDao" ref="contactUsDao" />
	</bean>
	<bean id="contactUsDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.ContactUsDaoImpl" />

	<alias name="marketPlaceCommerceCartSplitStrategy" alias="commerceCartSplitStrategy" />
	<bean id="marketPlaceCommerceCartSplitStrategy"
		class="com.tisl.mpl.marketplacecommerceservices.strategy.MarketPlaceCommerceCartSplitStrategy"
		parent="defaultCommerceCartSplitStrategy">
	</bean>
	<alias name="MarketPlaceCartServiceForAccelerator" alias="cartService" />
	<bean id="MarketPlaceCartServiceForAccelerator"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MarketplaceDefaultCartServiceForAccelerator"
		parent="defaultCartServiceForAccelerator" />

	<bean id="mplPreferenceService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultMplPreferenceService" />

	<alias name="defaultMplCommerceSearchResponseFacetsPopulator"
		alias="commerceSearchResponseFacetsPopulator" />
	<bean id="defaultMplCommerceSearchResponseFacetsPopulator"
		class="com.tisl.mpl.search.converters.populator.MplSearchResponseFacetsPopulator" />

	<!-- For Promotional Mail Send -->
	<bean id="promotionSendMailService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultPromotionSendMailService">
	</bean>

	<!-- For Promotional Report Generation -->
	<bean id="promotionalReportJob"
		class="com.tisl.mpl.marketplacecommerceservices.jobs.PromotionalReportJob"
		autowire="byName" />
	<bean id="promotionalReportCreationService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultPromotionalReportCreationService">
	</bean>
	<bean id="promotionalReportCreationDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.DefaultPromotionalReportCreationDao">
	</bean>


	<!-- For Promotion on Payment Screen -->
	<bean id="discountUtility" class="com.tisl.mpl.util.DiscountUtility" />

	<!-- bean entry for sales report cronjob -->
	<bean id="orderModelService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.OrderModelServiceImpl">
		<property name="orderModelDao" ref="orderModelDao" />
		<property name="orderModelStatusDao" ref="orderModelStatusDao" />
	</bean>

	<bean id="orderModelDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.OrderModelDaoImpl">
	</bean>
	<bean id="orderModelStatusDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.OrderStatusCodeMasterModelDaoImpl">
	</bean>

	<bean id="salesReportJob"
		class="com.tisl.mpl.marketplacecommerceservices.jobs.SalesDataReportJob"
		autowire="byName">
		<!-- <property name="orderModelService" ref="orderModelService"></property> 
			<property name="configurationService" ref="configurationService"></property> 
			<property name="orderFacade" ref="orderFacade"></property> <property name="productFacade" 
			ref="productFacade"></property> <property name="cronJobService" ref="cronJobService"></property> -->
	</bean>
	
	<bean id="orderRefundReportJob"
		class="com.tisl.mpl.marketplacecommerceservices.jobs.OrderRefundReportJob" >
		<property name="modelService" ref="modelService" />
		<property name="sessionService" ref="sessionService" />
		<property name="flexibleSearchService" ref="flexibleSearchService" />
	</bean>
	
	<!-- <alias alias="refundService" name="mplRefundService" /> -->
	<bean id="mplRefundService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MPLDefaultRefundService" 
		parent="defaultRefundService" scope="tenant">
		
	</bean>
	
	<bean id="mplrefundDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MPLDefaultRefundDao" 
		parent="defaultRefundDao" scope="tenant">
	</bean>
	
	<bean id="mplreplacmentDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MPLDefaultReplacmentDao" 
		parent="defaultReplacementOrderDao" scope="tenant">
	</bean>
	
	<bean id="mplorderCancelDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MPLDefaultOrderCancelDao" 
		parent="defaultOrderCancelDao" scope="tenant">
	</bean>
	
	<alias name="mplCustomerPopulator" alias="customerPopulator" />
	<bean id="mplCustomerPopulator"
		class="com.tisl.mpl.converter.populator.CustomCustomerPopulator">
		<property name="currencyConverter" ref="currencyConverter" />
		<property name="languageConverter" ref="languageConverter" />
		<property name="customerNameStrategy" ref="customerNameStrategy" />
	</bean>

	<!-- For My Interest -->
	<bean id="myStyleProfileDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.DefaultMyStyleProfileDaoImpl" />
	<bean id="myStyleProfileService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultMyStyleProfileServiceImpl">
		<property name="modelService" ref="modelService" />
		<property name="myStyleProfileDao" ref="myStyleProfileDao" />
	</bean>

	<alias alias="stockLevelDao" name="defaultStockLevelDao" />
	<bean id="defaultStockLevelDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.DefaultExtStockLevelDao"
		parent="abstractItemDao" scope="tenant">
		<property name="typeService" ref="typeService" />
		<property name="transactionTemplate">
			<bean class="org.springframework.transaction.support.TransactionTemplate"
				scope="tenant">
				<property name="transactionManager" ref="txManager" />
			</bean>
		</property>
		<property name="jdbcTemplate">
			<bean class="org.springframework.jdbc.core.JdbcTemplate" scope="tenant">
				<property name="dataSource" ref="dataSource" />
			</bean>
		</property>
	</bean>

	<!-- Stock Service -->
	<alias alias="stockService" name="defaultStockService" />
	<bean id="defaultStockService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultExtStockService"
		scope="tenant" parent="abstractBusinessService">
		<property name="stockLevelStatusStrategy" ref="stockLevelStatusStrategy" />
		<property name="productAvailabilityStrategy" ref="productAvailabilityStrategy" />
		<property name="stockLevelProductStrategy" ref="stockLevelProductID" />
		<property name="stockLevelDao" ref="stockLevelDao" />
	</bean>


	<alias alias="productAvailabilityStrategy" name="defaultProductAvailabilityStrategy" />
	<bean id="defaultProductAvailabilityStrategy"
		class="com.tisl.mpl.marketplacecommerceservices.strategy.ExtDefaultProductAvailabilityStrategy"
		scope="tenant">
		<property name="i18nService" ref="i18nService" />
		<property name="bestMatchStrategy" ref="bestMatchStrategy" />
		<property name="bundleProvider" ref="basecommerce.resourceBundleProvider" />
		<property name="stockLevelDao" ref="stockLevelDao" />
	</bean>

	<alias alias="commerceStockService" name="defaultCommerceStockService" />
	<bean id="defaultCommerceStockService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultExtCommerceStockService">
		<property name="commerceStockLevelCalculationStrategy" ref="commerceStockLevelCalculationStrategy" />
		<property name="stockService" ref="stockService" />
		<property name="warehouseSelectionStrategy" ref="warehouseSelectionStrategy" />
		<property name="storePickupDao" ref="storePickupDao" />
		<property name="stockLevelStatusStrategy" ref="stockLevelStatusStrategy" />
		<property name="stockLevelProductStrategy" ref="stockLevelProductID" />
	</bean>

	<alias name="defaultCartValidationStrategy" alias="cartValidationStrategy" />
	<bean id="defaultCartValidationStrategy"
		class="com.tisl.mpl.marketplacecommerceservices.strategy.ExtDefaultCartValidationStrategy">
		<property name="modelService" ref="modelService" />
		<property name="cartService" ref="cartService" />
		<property name="productService" ref="productService" />
		<property name="commerceStockService" ref="commerceStockService" />
		<property name="baseStoreService" ref="baseStoreService" />
		<property name="userService" ref="userService" />
	</bean>

	<bean id="mplNetBankingService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplNetBankingServiceImpl">
	</bean>
	<alias name="defaultCommerceUpdateCartEntryStrategy" alias="commerceUpdateCartEntryStrategy" />
	<bean id="defaultCommerceUpdateCartEntryStrategy"
		class="com.tisl.mpl.marketplacecommerceservices.strategy.ExtDefaultCommerceUpdateCartEntryStrategy"
		parent="abstractCommerceCartStrategy">
		<property name="commerceUpdateCartEntryHooks" ref="commerceUpdateCartEntryMethodHooks" />
		<property name="configurationService" ref="configurationService" />
	</bean>
	<alias name="defaultCommerceCartMergingStrategy" alias="commerceCartMergingStrategy" />
	<bean id="defaultCommerceCartMergingStrategy"
		class="com.tisl.mpl.marketplacecommerceservices.strategy.impl.ExtDefaultCommerceCartMergingStrategy"
		parent="abstractCommerceCartStrategy">
		<property name="userService" ref="userService" />
		<property name="commerceCartService" ref="commerceCartService" />
		<property name="baseSiteService" ref="baseSiteService" />
		<property name="commerceAddToCartStrategy" ref="commerceAddToCartStrategy" />
	</bean>

	<alias name="defaultCommerceCartRestorationStrategy" alias="commerceCartRestorationStrategy" />
	<bean id="defaultCommerceCartRestorationStrategy"
		class="com.tisl.mpl.marketplacecommerceservices.strategy.impl.ExtDefaultCommerceCartRestorationStrategy"
		parent="abstractCommerceCartStrategy">
		<property name="timeService" ref="timeService" />
		<property name="baseSiteService" ref="baseSiteService" />
		<property name="cartFactory" ref="cartFactory" />
		<property name="commerceAddToCartStrategy" ref="commerceAddToCartStrategy" />
		<property name="guidKeyGenerator" ref="guidKeyGenerator" />
		<!-- Commented due to cart merge Issue,During Promotion Caching Implementation need to override rebuildsessioncart and rewriteentriesfromcarttocart -->
<!-- 		<property name="cartValidityPeriod" value="0"/> -->
	</bean>


	<alias alias="emailService" name="defaultExtEmailService" />
	<bean id="defaultExtEmailService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultExtEmailService"

		parent="defaultEmailService">
		<!-- <property name="mediaService" ref="mediaService"/> <property name="catalogVersionService" 
			ref="catalogVersionService"/> <property name="catalogService" ref="catalogService"/> 
			<property name="configurationService" ref="configurationService"/> <property 
			name="emailAttachmentsMediaFolderName" value="email-attachments"/> <property 
			name="emailBodyMediaFolderName" value="email-body"/> <property name="emailAddressFetchStrategy" 
			ref="emailAddressFetchStrategy"/> -->
	</bean>

	<bean id="pdpEmailService"
		class="com.tisl.mpl.marketplacecommerceservices.service.DefaultPDPEmailNotificationService">
	</bean>
	
	<!-- Key generator for Juspay -->
	<bean id="juspayOrderIdGenerator"
		class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator"
		init-method="init" scope="tenant">
		<property name="key" value="juspayOrderId" />
		<property name="digits" value="9" />
		<property name="start" value="#{configurationService.configuration.getProperty('juspay.orderId.startId')}" />
		<property name="numeric" value="true" />
	</bean>
	<!-- Key generator for Juspay Ends --> 

	<!-- Key generator for COD Payment Transaction -->
	<bean id="codCodeGenerator"
		class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator"
		init-method="init" scope="tenant">
		<property name="key" value="codCode" />
		<property name="digits" value="9" />
		<property name="start" value="100000001" />
		<property name="numeric" value="true" />
	</bean>
	<!-- Key generator for COD Payment Transaction Ends -->
	
	<!-- Key generator for Third Party Wallet -->
	<bean id="walletOrderIdGenerator"
		class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator"
		init-method="init" scope="tenant">
		<property name="key" value="walletOrderId" />
		<property name="digits" value="9" />
		<property name="start" value="#{configurationService.configuration.getProperty('wallet.orderId.startId')}" />
		<property name="numeric" value="true" />
	</bean>
	<!-- Key generator for Third Party Wallet Ends --> 


	<!-- For Payment Web Hook Integration -->
	<bean id="juspayWebHookDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.DefaultJuspayWebHookDaoImpl" />

	<bean id="juspayWebHookService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultJuspayWebHookServiceImpl">
		<!-- <property name="mplJusPayRefundService" ref="mplJusPayRefundService" 
			/> -->
		<property name="modelService" ref="modelService" />
		<property name="juspayWebHookDao" ref="juspayWebHookDao" />
	</bean>

	<bean id="juspayEBSService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultJuspayEBSServiceImpl">
		<property name="modelService" ref="modelService" />
		<property name="juspayWebHookDao" ref="juspayWebHookDao" />
		<property name="configurationService" ref="configurationService" />
		<property name="businessProcessService" ref="businessProcessService" />
	</bean>

	<bean id="mplMyFavBrandCategoryService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultMplMyFavBrandCategoryService">
	</bean>
	<bean id="mplMyFavBrandCategoryDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.DefaultMplMyFavBrandCategoryDao">
	</bean>

	<alias name="defaultProductModelUrlResolver" alias="productModelUrlResolver" />
	<bean id="defaultProductModelUrlResolver"
		class="com.tisl.mpl.marketplacecommerceservice.url.ExtDefaultProductModelUrlResolver">
		<property name="threadContextService" ref="threadContextService" />
		<property name="commerceCategoryService" ref="commerceCategoryService" />
		<property name="baseSiteService" ref="baseSiteService" />
		<property name="defaultPattern" value="/{product-name}/p-{product-code}" />
		<!-- <property name="defaultPattern" value="/{product-name}/p/{product-code}" /> -->
		<!-- <property name="defaultPattern" value="/{category-path}/{product-name}/p/{product-code}" 
			/> -->
	</bean>

	<alias name="defaultCategoryModelUrlResolver" alias="categoryModelUrlResolver" />
	<bean id="defaultCategoryModelUrlResolver"
		class="com.tisl.mpl.marketplacecommerceservice.url.ExtDefaultCategoryModelUrlResolver">
		<property name="threadContextService" ref="threadContextService" />
		<property name="commerceCategoryService" ref="commerceCategoryService" />
		<property name="baseSiteService" ref="baseSiteService" />
		<property name="pattern" value="/{category-path}/c-{category-code}" />
		<!-- <property name="pattern" value="/{category-path}/c/{category-code}" /> -->
	</bean>

	<bean id="mplWishlistDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.DefaultMplWishlistDao" />

	<!-- Bean entry for webhook insert service -->
	<alias name="juspayWebhookInsertService" alias="juspayWebhookInsertService" />
	<bean id="juspayWebhookInsertService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.JuspayWebhookInsertServiceImpl">
	</bean>

	<!-- Key generator for subOrderIdGenerator -->
	<bean id="subOrderIdGenerator"
		class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator"
		init-method="init" scope="tenant">
		<property name="key" value="subOrderId" />
		<property name="digits" value="6" />
		<property name="start" value="100001" />
		<property name="numeric" value="true" />
	</bean>
	<!-- Key generator for subOrderIdGenerator Ends -->

	<!-- Key generator for orderLineIdGenerator -->
	<bean id="orderLineIdGenerator"
		class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator"
		init-method="init" scope="tenant">
		<property name="key" value="orderLineId" />
		<property name="digits" value="6" />
		<property name="start" value="100001" />
		<property name="numeric" value="true" />
	</bean>
	<!-- Key generator for orderLineIdGenerator Ends -->

	<!-- Key generator for orderLineIdGenerator -->
	<bean id="orderIdGenerator"
		class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator"
		init-method="init" scope="tenant">
		<property name="key" value="orderId" />
		<property name="digits" value="9" />
		<property name="start" value="100000001" />
		<property name="numeric" value="true" />
	</bean>
	<!-- Key generator for orderLineIdGenerator Ends -->

	<bean id="orderStatusSpecifier" class="com.tisl.mpl.util.OrderStatusSpecifier" />

	<bean id="globalCodeService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultGlobalCodeService" />

	<bean id="mplCancelOrder"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplCancelOrderTicketImpl" />

	<!-- Promotion Helper Class -->
	<bean id="mplPromotionHelper" class="com.tisl.mpl.promotion.helper.MplPromotionHelper" />


	<bean id="mplDefaultOrderCancelRecordsHandler"
		class="com.tisl.mpl.ordercancel.MplDefaultOrderCancelRecordsHandler"
		parent="defaultOrderCancelRecordsHandler" scope="tenant">

	</bean>

	<!-- <alias alias="orderCancelService" name="mplPlacedefaultOrderCancelService"/> 
		<bean id="mplPlacedefaultOrderCancelService" parent="defaultOrderCancelService" 
		> <property name="orderCancelRecordsHandler" ref="mplDefaultOrderCancelRecordsHandler"/> 
		<property name="requestExecutorsMap"> <map> <entry key="PENDINGORHOLDINGAREA" 
		value-ref="mplImmediateCancelRequestExecutor"/> <entry key="SENTTOWAREHOUSE" 
		value-ref="mplImmediateCancelRequestExecutor"/> <entry key="SHIPPING" value-ref="mplImmediateCancelRequestExecutor"/> 
		<entry key="PARTIALLYSHIPPED" value-ref="mplImmediateCancelRequestExecutor"/> 
		</map> </property> </bean> -->

	<alias alias="immediateCancelRequestExecutor" name="mplImmediateCancelRequestExecutor" />
	<bean id="mplImmediateCancelRequestExecutor"
		class="de.hybris.platform.ordercancel.impl.executors.ImmediateCancelRequestExecutor"
		scope="prototype">
		<property name="modelService" ref="modelService" />
		<property name="orderCancelRecordsHandler" ref="mplDefaultOrderCancelRecordsHandler" />
		<property name="completeCancelStatusChangeStrategy" ref="setCancellledStrategy" />
		<!-- <property name="partialCancelStatusChangeStrategy" ref=""/> Provide 
			a strategy here if Order's state should change when partially cancelled. -->
		<!-- THESE DEPENDENCIES MUST BE PROVIDED BY USERS OF THE ORDER CANCEL SERVICE 
			<property name="paymentServiceAdapter" ref="orderCancelPaymentServiceAdapter"/> 
			<property name="notificationServiceAdapter" ref="orderCancelNotificationServiceAdapter"/> -->
	</bean>

	<alias alias="commerceCartCalculationStrategy" name="mplDefaultCommerceCartCalculationStrategy" />
	<bean id="mplDefaultCommerceCartCalculationStrategy"
		class="com.tisl.mpl.commerceservices.order.impl.MplDefaultCommerceCartCalculationStrategy">
		<property name="calculationService" ref="calculationService" />
		<property name="promotionsService" ref="promotionsService" />
		<property name="timeService" ref="timeService" />
		<property name="baseSiteService" ref="baseSiteService" />
		<property name="configurationService" ref="configurationService" />
		<property name="commerceCartCalculationMethodHooks" ref="commerceCartCalculationMethodHooks" />
	</bean>

	<!-- overriding cart promotion strategy -->
	<alias alias="promotionsService" name="defaultPromotionsService" />
	<bean id="defaultPromotionsService"
		class="com.tisl.mpl.marketplacecommerceservices.strategy.impl.ExtDefaultPromotionsService"
		parent="abstractPromotionsService" scope="tenant">
	</bean>

	<bean id="mplFraudModelService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplFraudModelServiceImpl" />

	<!-- High Risk Email to Payment User group -->
	<alias name="notifyPaymentGroupMailService" alias="notifyPaymentGroupMailService" />
	<bean id="notifyPaymentGroupMailService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultNotifyPaymentGroupMailService">
	</bean>
	<!-- RMS Notification Email -->
	<alias name="rMSVerificationNotificationService" alias="rMSVerificationNotificationService" />
	<bean id="rMSVerificationNotificationService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultRMSVerificationNotificationService">
	</bean>

	<alias alias="productDao" name="defaultProductDao" />
	<bean id="defaultProductDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.product.impl.MplProductDaoImpl">
		<constructor-arg value="Product" />
	</bean>

	<alias name="mplPaymentTransactionService" alias="mplPaymentTransactionService" />
	<bean id="mplPaymentTransactionService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplPaymentTransactionServiceImpl">
	</bean>

	<alias name="defaultCalculationService" alias="calculationService" />
	<bean id="defaultCalculationService" class="com.tisl.mpl.order.impl.MplDefaultCalculationService"
		parent="abstractBusinessService">
		<property name="commonI18NService" ref="commonI18NService" />
		<property name="findPriceStrategy" ref="currentFactoryFindPricingStrategy" />
		<property name="findDiscountsStrategies">
			<list>
				<ref bean="currentFactoryFindPricingStrategy" />
				<ref bean="findOrderDiscountValuesStrategy" />
			</list>
		</property>
		<property name="findTaxesStrategies">
			<list>
				<ref bean="currentFactoryFindPricingStrategy" />
			</list>
		</property>
		<property name="findDeliveryCostStrategy" ref="findDeliveryCostStrategy" />
		<property name="findPaymentCostStrategy" ref="findPaymentCostStrategy" />
		<property name="orderRequiresCalculationStrategy" ref="orderRequiresCalculationStrategy" />
		<property name="taxFreeEntrySupport" value="${abstractorder.taxFreeEntrySupport}" />
	</bean>

	<!-- Webhook Report Related Bean -->
	<alias name="mplWebhookReportService" alias="mplWebhookReportService" />
	<bean id="mplWebhookReportService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplWebhookReportServiceImpl">
		<property name="mplWebhookReportDao" ref="mplWebhookReportDao" />
	</bean>

	<alias name="mplWebhookReportDao" alias="mplWebhookReportDao" />
	<bean id="mplWebhookReportDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplWebhookReportDaoImpl">
	</bean>

	<bean id="webhookReportJob"
		class="com.tisl.mpl.marketplacecommerceservices.jobs.WebhookReportJob"
		autowire="byName" />
	<!-- Webhook Report Related Bean Ends -->
	<bean id="mplCheckCartLevelStrategy"
		class="com.tisl.mpl.strategy.service.impl.MplCheckCartLevelStrategyImpl">
		<property name="cartService" ref="cartService" />
		<property name="cartEntryDao" ref="cartEntryDao" />
	</bean>
	<bean id="sizeGuideDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.SizeGuideDaoImpl">
	</bean>
	
	<alias name="defaultMplCommerceSearchResponseSellerIDPopulator" alias="commerceSearchResponseSellerIDPopulator" />
	<bean id="defaultMplCommerceSearchResponseSellerIDPopulator" class="com.tisl.mpl.converter.populator.MplSearchResponseSellerIDPopulator" />
	
	<alias name="defaultMplCommerceSearchResponseQueryPopulator" alias="commerceSearchResponseQueryPopulator" />
	<bean id="defaultMplCommerceSearchResponseQueryPopulator" class="com.tisl.mpl.converter.populator.MplSearchResponseQueryPopulator" />
	
	<alias name="defaultMplCommerceSearchResponseOfferIDPopulator" alias="commerceSearchResponseOfferIDPopulator" />
	<bean id="defaultMplCommerceSearchResponseOfferIDPopulator" class="com.tisl.mpl.converter.populator.MplSearchResponseOfferIDPopulator" />
			
	<alias name="defaultMplCommerceSearchResponseOfferCategoryIDPopulator" alias="commerceSearchResponseOfferCategoryIDPopulator" />
	<bean id="defaultMplCommerceSearchResponseOfferCategoryIDPopulator" class="com.tisl.mpl.converter.populator.MplSearchResponseOfferCategoryIDPopulator" />
	
	<alias name="defaultMplCommerceSearchResponseBreadcrumbsPopulator"
		alias="commerceSearchResponseBreadcrumbsPopulator" />
	<bean id="defaultMplCommerceSearchResponseBreadcrumbsPopulator"
		class="com.tisl.mpl.converter.populator.MplSearchResponseBreadcrumbsPopulator" />
	<!-- Ticket creation cronjob -->
	<bean id="ticketCreateCronjob"
		class="com.tisl.mpl.marketplacecommerceservices.jobs.TicketCreateCronjob"
		autowire="byName">
	</bean>
	<!-- End -->
	
	<!-- Mpl ticket Service & Dao -->
	<bean id="mplTicketService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplTicketServiceImpl">
		<property name="mplTicketDao" ref="mplTicketDao" />
	</bean>
	
	<bean id="mplTicketDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplTicketDaoImpl">
	</bean>
	
	<bean id="sizeAttributeComparator"
	      class="de.hybris.platform.acceleratorservices.search.comparators.SizeAttributeComparator">
		<property name="pattern" value="^[0-9]+$"/>
		<property name="sizeSystems">
			<list><!-- based on EN_13402 -->
				<value>XXS</value>
				<value>XS</value>
				<value>S</value>
				<value>M</value>
				<value>L</value>
				<value>LXL</value>
				<value>XL</value>
				<value>XXL</value>
				<value>3XL</value>
				<value>4XL</value>
				<value>5XL</value>
			</list>
		</property>
	</bean>
	
	<bean id="addPriorityStatusInterceptor" class="com.tisl.mpl.interceptor.AddSellerPriorityInterceptor" /> 
	<bean id="SellerPriorityStatusInterceptorMapping" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
  <property name="interceptor" ref="addPriorityStatusInterceptor" /> 
  <property name="typeCode" value="MplSellerPriority" /> 
  </bean>
	
	
	<!-- pdp seller priority interceptor starts -->
	<bean id="sellerPriorityInterceptor" class="com.tisl.mpl.interceptor.SellerPriorityInterceptor">
	</bean>

	<bean id="SellerPriorityInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="sellerPriorityInterceptor" />
		<property name="typeCode" value="MplSellerPriority" />
	</bean>
  
	<!--pdp seller priority interceptor ends -->
	<!-- pdp seller priority starts -->
	<bean id="mplSellerPriorityDao" class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplSellerPriorityDaoImpl">
	</bean>
	<bean id="mplSellerPriorityService" class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplSellerPriorityServiceImpl">
	</bean>
	<!-- pdp seller priority ends -->
	
	
	<!-- End -->
	
	<!-- <bean id="mplPromotionService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplPromotionServiceImpl">
	</bean>
	
	<bean id="mplPromotionDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplPromotionDaoImpl">
	</bean> -->
	
	
	<!-- <bean id="findOrderDiscountValuesStrategy"
		class="com.tisl.mpl.order.impl.MplFindOrderDiscountValuesStrategy"
		parent="abstractBusinessService"/> -->
		

		 <!--  pdp seller priority report cron job -->

    <bean id="sellerPriorityReportJob" parent="abstractJobPerformable" class="com.tisl.mpl.marketplacecommerceservices.jobs.SellerPriorityReportJob" autowire="byName">
    </bean>
	  <!--  pdp seller priority report cron job ends -->
	  
	  <alias name="mplVoucherService" alias="mplVoucherService" />
	<bean id="mplVoucherService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplVoucherServiceImpl">
<!-- <property name="calculationService" ref="calculationService" /> -->
		<property name="modelService" ref="modelService" />
		<property name="voucherModelService" ref="voucherModelService" />
		<!-- <property name="commerceCartService" ref="commerceCartService" /> -->
		<property name="voucherService" ref="voucherService" />
		<!-- <property name="commerceCartCalculationStrategy" ref="commerceCartCalculationStrategy" /> -->
		<property name="discountUtility" ref="discountUtility" />
	</bean>
	
	<bean id="homepageComponentService" class="com.tisl.mpl.marketplacecommerceservices.service.impl.HomepageComponentServiceImpl">
		<!-- <property name="threadContextService" ref="threadContextService" />
		<property name="commerceCategoryService" ref="commerceCategoryService" />
		<property name="baseSiteService" ref="baseSiteService" />
		<property name="pattern" value="/{category-path}/c-{category-code}" /> -->
	</bean>
	
    <bean id="automationService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.InternalExternalAutomationServiceImpl">
	</bean>
	
	
		
	<bean id="CampaignAutomationJob" parent="abstractJobPerformable"
		class="com.tisl.mpl.marketplacecommerceservices.jobs.InternalExternalCampaignAutomationJob"
		autowire="byName">
	</bean>


	<!-- Tata Cliq Job : Campaign Team -->
	<bean id="campaignPromoSubService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultCampaignPromoSubService">
	</bean>
	
	<bean id="campaignPromoDataService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultCampaignPromoDataService">
		<property name="modelService" ref="modelService" />
		<property name="campaignPromoSubService" ref="campaignPromoSubService" />
		<property name="sellerBasedPromotionDao" ref="sellerBasedPromotionDao" />
	</bean>

	<bean id="campaignData" class="com.tisl.mpl.pojo.CampaignData" />

	<!-- Start : Oms fallback mechanism -->
	<bean id="mplPincodeServiceDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplPincodeServiceDaoImpl">
	</bean>
	
	<bean id="mplPincodeService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultMplPincodeService" >
		<property name="mplPincodeServiceDao" ref="mplPincodeServiceDao" />
		<property name="juspayWebHookService" ref="juspayWebHookService" />
	</bean>
	<!-- End: fallback mechanism -->
	
	<!-- Coupon restriction service, added for getting restrictions for coupon -->
	<bean id="couponRestrictionService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplCouponRestrictionServiceImpl">		
	</bean>


	<!-- Using Google Map service to look up address data. -->
	<alias alias="geoServiceWrapper" name="defaultGoogleMapsGeoServiceWrapper"/>
	
	<alias alias="countryIsoGPSLocationMap" name="mplCountryIsoGPSLocationMap"/>
	<bean id="mplCountryIsoGPSLocationMap" class="org.springframework.beans.factory.config.MapFactoryBean">
		<property name="sourceMap">
			<map merge="true" key-type="java.lang.String" value-type="de.hybris.platform.storelocator.GPS">
				<entry key="DEFAULT">
					<bean class="de.hybris.platform.storelocator.impl.DefaultGPS">
						<constructor-arg value="0D"/>
						<constructor-arg value="0D"/>
					</bean>
				</entry>
				<entry key="IN">
					<bean class="de.hybris.platform.storelocator.impl.DefaultGPS">
						<constructor-arg value="21.0000D"/>
						<constructor-arg value="78.0000D"/>
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<alias name="mplGoogleMapTools" alias="googleMapTools"/>
	<bean id="mplGoogleMapTools" class="de.hybris.platform.storelocator.impl.GoogleMapTools" scope="prototype">
		<property name="addressLocationParser" ref="firstPlacemarkWinsGoogleResponseParser"/>
		<property name="routeDataParser" ref="routeDataGoogleResponseParser"/>
		<property name="directionsUrlBuilder" ref="geolocationDirectionsUrlBuilder"/>
	</bean>
	
	<!-- Store Locator Beans end here -->
	
	<!-- UserGroupSaveInterceptor starts -->
	<bean id="UserGroupSaveInterceptor" class="com.tisl.mpl.interceptor.UserGroupSaveInterceptor" />

	<bean id="UserGroupSaveInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="UserGroupSaveInterceptor" />
		<property name="typeCode" value="PrincipalGroup" />


	</bean>
	<!-- UserGroupSaveInterceptor ends -->	
	<bean id="fallbackOrderPojo" class="com.tisl.mpl.pojo.FallbackOrderPojo" />
	<!-- TISPRD-1631 Changes Start (Extending Product Service) -->
	
<alias alias="productService" name="defaultProductService"/>
	<bean id="defaultProductService" class="com.tisl.mpl.marketplacecommerceservices.services.product.impl.MplProductServiceImpl"
			parent="abstractBusinessService">
		<property name="productDao" ref="productDao"/>
		<property name="unitDao" ref="unitDao"/>
		<property name="priceService" ref="priceService"/>
	</bean>
	
	<!-- TISPRD-1631 Changes End (Extending Product Service) -->
	
	<!-- Tata Cliq : Special Price Updation Logic Service-->
	<bean id="updateSplPriceHelperService"
		class="com.tisl.mpl.promotion.service.impl.DefaultUpdateSplPriceHelperService">
	</bean>
<!-- IA  export job 22 May 16 -->
	<bean id="catProdExportJob" class="com.tisl.mpl.integration.job.CategoryProductExtractJob"
		parent="abstractJobPerformable"
			autowire="byName">
		<property name="modelService" ref="modelService" />
	</bean>
	<bean id="brandProductExportJob" class="com.tisl.mpl.integration.job.BrandProductExtractJob"
		parent="abstractJobPerformable"
			autowire="byName">
		<property name="modelService" ref="modelService" />
	</bean>
	<bean id="priceInventoryExportJob" class="com.tisl.mpl.integration.job.PriceInventoryExtractJob"
		parent="abstractJobPerformable"
			autowire="byName">
		<property name="modelService" ref="modelService" />
	</bean>
	<bean id="priceInventoryControlJob" class="com.tisl.mpl.integration.job.PriceInventoryControlJob"
		parent="abstractJobPerformable"
			autowire="byName">
		<property name="modelService" ref="modelService" />
	</bean>
	<bean id="iaFeedUtil" class="com.tisl.mpl.integration.job.IAFeedUtility">
	</bean>
<!-- IA STAGED DATA SOURCE -->
<!-- <bean id="iaDataSource"
 -->

  <!--  <bean id="iaDataSource"
>>>>>>> refs/remotes/origin/GOLDEN_PROD_SUPPORT_3rd_Nov_2016
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@10.10.64.34:1621/MPLDEVDB" />
		<property name="username" value="mpldev2com" />
		<property name="password" value="mpldev2com123" />
	</bean>   -->


	
	 <bean id="iaDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="${jdbc.iastg.url}" />
		<property name="username" value="${jdbc.iastg.user}" />
		<property name="password" value="${jdbc.iastg.pass}" />
	</bean>
	<!-- New Buy Box Implementation Start -->
<!-- 	<bean id="buyBoxDataSource" -->
<!-- 		class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
<!-- 		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" /> -->
<!-- 		<property name="url" value="${buybox.jdbc.url}" /> -->
<!-- 		<property name="username" value="${buybox.jdbc.user}" /> -->
<!-- 		<property name="password" value="${buybox.jdbc.pass}" /> -->
<!-- 	</bean> -->
	

	<bean id="buyBoxImportUtil" class="com.tisl.mpl.buyboxdataimport.BuyBoxImportUtility">
	</bean>
	
	<bean id="buyBoxDataImportJob" class="com.tisl.mpl.buyboxdataimportjob.BuyBoxDataExtractJob"
		parent="abstractJobPerformable">
			<property name="modelService" ref="modelService" />
			</bean>
	<!-- New Buy Box Implementation End -->
	
	<bean id="juspayOrderResponseConverter" parent="abstractPopulatingConverter">
		<property name="targetClass" value="com.tisl.mpl.juspay.response.GetOrderStatusResponse"/>
        <property name="populators">
            <list merge="true">
				<ref bean="juspayOrderResponsePopulator"/>
            </list>
        </property>
    </bean>
    
	<bean id="juspayOrderResponsePopulator"
			class="com.tisl.mpl.converter.populator.JuspayOrderResponsePopulator" >
	</bean>
	
	<!-- New Keyword Redirection Implementation End -->
	<bean id="mplKeywordRedirectDao" class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplKeywordRedirectDaoImpl">
	</bean>

	<!-- New Payment Solution Starts TPR-629-->	
	<bean id="mplProcessOrderService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplProcessOrderServiceImpl">
		<property name="orderService" ref="orderService" />
		<property name="juspayOrderResponseConverter" ref="juspayOrderResponseConverter" />
		<!-- CAR:127 -->
		<property name="orderConverter" ref="orderConverter"></property>
	</bean>
	
	<bean id="mplProcessOrderDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplProcessOrderDaoImpl" />

	<bean id="mplVoucherDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplVoucherDaoImpl" />
	<!-- TPR-629 ends -->
	
	<!-- Bean for POC Search starts-->

	<bean id="standardizationDao"
		class="com.tisl.mpl.standardizationfactory.StandardizationDaoImpl">
	</bean>
	<bean id="standardizationService"
		class="com.tisl.mpl.standardizationfactory.StandardizationServiceImpl">
	</bean>
	
	<bean id="sizeStandardInterceptor"
		class="com.tisl.mpl.interceptor.SizeStandardInterceptor">
	</bean>

	<bean id="sizeStandardInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="sizeStandardInterceptor" />
		<property name="typeCode" value="Sizesystem" />
	</bean>
	<!-- Bean for POC Search ends-->



	<!-- TPR-565 -->
	<bean id="mplShopByLookSaveInterceptor" class="com.tisl.mpl.interceptor.MplShopByLookInterceptor" />

	<bean id="mplShopByLookSaveInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="mplShopByLookSaveInterceptor" />
		<property name="typeCode" value="MplShopByLook" />
	</bean>
	

	<!-- Added for displaying offer messages other than promotion, TPR-589-->
	<bean id="prodOfferDetService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.ProductOfferDetailServiceImpl">		
	</bean>
	<bean id="prodOfferDetDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.ProductOfferDetailDaoImpl">
		<property name="flexibleSearchService" ref="flexibleSearchService" />
		<property name="modelService" ref="modelService" />		
	</bean>
	
	<!-- Bundle Promotion Helper Class -->
	<bean id="mplBundlePromotionHelper" class="com.tisl.mpl.promotion.helper.MplBundlePromotionHelper" />
	
	
	<!-- Added for TPR-1035-->
 	
 	<bean id="mplBinErrorService"
 		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultMplBinErrorService">
 		<property name="modelService" ref="modelService" />
 		<property name="mplBinErrorDao" ref="mplBinErrorDao" />
 	</bean>
 	
 	<bean id="mplBinErrorDao" class="com.tisl.mpl.promotion.dao.impl.MplBinErrorDaoImpl" />
 	
 	<bean id="mplBinErrorData" class="com.tisl.mpl.pojo.MplBinErrorData" />
 	
	 <!-- For Bulk Seller  Upload on HMC Configuration Screen  TPR -715-->
	<bean id="sellerBulkLoadInterceptor" class="com.tisl.mpl.interceptor.SellerBulkLoadInterceptor" />
	
	<bean id="sellerBulkLoadInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="sellerBulkLoadInterceptor" />
		<property name="typeCode" value="EtailSellerSpecificRestriction" />
	</bean>
	
	<!-- For Bulk Seller  Upload on HMC Configuration Screen  TPR -715 + TPR-1620-->
	<bean id="exSellerBulkLoadInterceptor" class="com.tisl.mpl.interceptor.ExSellerBulkLoadInterceptor" />
	
	<bean id="exSellerBulkLoadInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="exSellerBulkLoadInterceptor" />
		<property name="typeCode" value="EtailExcludeSellerSpecificRestriction" />
	</bean>

	
	<!-- TPR-1282 -->

	<alias name="mplCmsCacheService" alias="cmsCacheService"/>
	<bean id="mplCmsCacheService" class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplCmsCacheServiceImpl"
		parent="defaultCmsCacheService">
		
	</bean>
	
		<!-- A+ Content TPR-978 -->
	<bean id="businessContentImportJob" class="com.tisl.mpl.businesscontentimport.BusinessContentImportJob"
		parent="abstractJobPerformable">
			<property name="modelService" ref="modelService" />
			</bean>
			
	<bean id="businessContentImportUtil" class="com.tisl.mpl.businesscontentimport.BusinessContentImportUtility" >
	<property name="businessContentImportService" ref="businessContentImportService" />
	</bean>

	<bean id="businessContentImportService"
		class="com.tisl.mpl.businesscontentimport.BusinessContentImportServiceImpl">
		<property name="modelService" ref="modelService" />
		<property name="businessContentImportDao" ref="businessContentImportDao" />
		</bean>
		 
	<bean id="businessContentImportDao" class="com.tisl.mpl.businesscontentimport.BulkContentCreationDaoImpl" >
		</bean>
		
	<!-- TPR-3487 -->	
	<bean id="DeliveryCostInterceptor" class="com.tisl.mpl.interceptor.SaveDeliveryCostInterceptor" />

	<bean id="SaveDeliveryCostInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="DeliveryCostInterceptor" />
		<property name="typeCode" value="AbstractOrder" />	
	</bean>	
	<!-- TPR-3487 -->		
		
	<!-- Bean for Promotion Job starts-->
 	
 	<bean id="promotionPriceUpdaterDao"
 		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.PromotionPriceUpdaterDaoImpl" />
 
 	<bean id="promotionPriceUpdaterService"
 		class="com.tisl.mpl.marketplacecommerceservices.service.impl.DefaultPromotionPriceUpdaterServiceImpl">	
 	</bean>
 	<!-- Bean for Promotion Job ends-->

	<!-- LW-245 -->
	<bean id="brandProductLuxuryExportJob" class="com.tisl.mpl.integration.job.BrandProductLuxuryExportJob"
		parent="abstractJobPerformable"
			autowire="byName">
		<property name="modelService" ref="modelService" />
	</bean>
	<bean id="catProdLuxuryExportJob" class="com.tisl.mpl.integration.job.CategoryProductLuxuryExtractJob"
		parent="abstractJobPerformable"
			autowire="byName">
		<property name="modelService" ref="modelService" />
	</bean>
	<bean id="priceInventoryLuxuryExportJob" class="com.tisl.mpl.integration.job.PriceInventoryLuxuryExportJob"
		parent="abstractJobPerformable"
			autowire="byName">
		<property name="modelService" ref="modelService" />
	</bean>

	<!-- Old Cron Job Deletion Logic : Added as part of PT FIX-->
	<alias name="mplcleanupCronJobsPerformable" alias="cleanupCronJobsPerformable" />
	<bean id="mplcleanupCronJobsPerformable" parent="abstractGenericMaintenanceJobPerformable">
        <property name="maintenanceCleanupStrategy">
            <bean class="com.tisl.mpl.marketplacecommerceservices.strategy.MplCleanupCronJobStrategy">
                <property name="modelService" ref="modelService"/>
                <property name="typeService" ref="typeService"/>
                <property name="status">
                    <set>
                        <value type="de.hybris.platform.cronjob.enums.CronJobStatus">FINISHED</value>
                        <value type="de.hybris.platform.cronjob.enums.CronJobStatus">ABORTED</value>
                    </set>
                </property>
                <property name="result">
                    <set>
                        <value type="de.hybris.platform.cronjob.enums.CronJobResult">SUCCESS</value>
      				    <value type="de.hybris.platform.cronjob.enums.CronJobResult">FAILURE</value>
                        <value type="de.hybris.platform.cronjob.enums.CronJobResult">ERROR</value>
                    </set>
                </property>
                <property name="excludedCronJobCodes">
                    <set/>
                </property>
                <property name="expiryDays" value="${cronjob.dayOld.count}"/>
            </bean>
        </property>
    </bean>
   <!--  mrupee changes starts -->
   <bean id="mRupeeWalletService" class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplThirdPartyWalletServiceImpl">
      <property name="configurationService" ref="configurationService" />
      <property name="orderService" ref="orderService" />
      <property name="orderConverter" ref="orderConverter"/>
   </bean>
   <bean id="mplThirdPartyWalletDao" class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplThirdPartyWalletDaoImpl">
   </bean>
  <!--  mrupee changes ends -->
	<!-- Old Cron Job Deletion Logic ends: -->


	<!-- TPR-1285 Start -->
	<alias name="mplProductPageSiteMapGenerator" alias="productPageSiteMapGenerator"/>
	<bean id="mplProductPageSiteMapGenerator"
	    class="com.tisl.mpl.sitemap.generator.impl.MplProductPageSiteMapGenerator"
	    parent="defaultProductPageSiteMapGenerator">
	</bean>
	
	<alias name="mplCustomPageSiteMapGenerator" alias="mplCustomPageSiteMapGenerator"/>
	<bean id="mplCustomPageSiteMapGenerator"
		class="com.tisl.mpl.sitemap.generator.impl.MplCustomPageSiteMapGenerator"
	    parent="abstractSiteMapGenerator">
		<property name="siteMapUrlDataConverter" ref="mplCustomPageToSiteMapUrlDataConverter"/>
		<property name="siteMapPageEnum" value="CUSTOM"/>
	    <property name="cmsPageService" ref="cmsPageService"/>
	</bean> 
	
	<!-- PRDI-423 start -->
	<alias name="mplbrandPageSiteMapGenerator" alias="mplbrandPageSiteMapGenerator"/>
	<bean id="mplbrandPageSiteMapGenerator"
		class="com.tisl.mpl.sitemap.generator.impl.MplBrandPageSiteMapGenerator"
	    parent="abstractSiteMapGenerator">
		<property name="siteMapUrlDataConverter" ref="mplCustomPageToSiteMapUrlDataConverter"/>
		<property name="siteMapPageEnum" value="CUSTOM"/>
	    <property name="cmsPageService" ref="cmsPageService"/>
	</bean> 
	<!-- PRDI-423 end-->
	
	<alias name="mplCustomPageToSiteMapUrlDataConverter" alias="mplCustomPageToSiteMapUrlDataConverter"/>
	<bean id="mplCustomPageToSiteMapUrlDataConverter" parent="abstractPopulatingConverter">
		<property name="targetClass" value="de.hybris.platform.acceleratorservices.sitemap.data.SiteMapUrlData"/>
		<property name="populators">
			<list>
				<ref bean="mplCustomPageToSiteMapUrlDataPopulator"/>
			</list>
		</property>
	</bean>
	
	
	<alias name="mplCustomPageToSiteMapUrlDataPopulator" alias="mplCustomPageToSiteMapUrlDataPopulator"/>
	<bean id="mplCustomPageToSiteMapUrlDataPopulator"
	      class="com.tisl.mpl.converter.populator.MplCustomPageToSiteMapUrlDataPopulator">
	</bean>	
	
	<alias name="mplProductModelToSiteMapUrlDataPopulator" alias="productModelToSiteMapUrlDataPopulator"/>
 	<bean id="mplProductModelToSiteMapUrlDataPopulator"
 	      class="com.tisl.mpl.converter.populator.MplProductModelToSiteMapUrlDataPopulator"
 	      parent="defaultProductModelToSiteMapUrlDataPopulator">
 	</bean>
 	<!-- TPR-965 STARTS-->
	 <bean id="stockPromoCheckService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.ExtStockLevelPromotionCheckServiceImpl">
	</bean>
	 <bean id="stockPromoCheckDao"
		class="com.tisl.mpl.promotion.dao.impl.ExtStockLevelPromotionCheckDaoImpl">
		<property name="flexibleSearchService" ref="flexibleSearchService" />
		<property name="modelService" ref="modelService" />
	</bean>
	<!-- TPR-965 ENDS-->
<!-- TPR-1285 End -->

<!-- TPR-978 -->
<bean id="aPlusContentPrepareInterceptor" class="com.tisl.mpl.interceptor.APlusContentPrepareInterceptor" autowire="byName"></bean>
<bean id="AplusContentPrepareInterceptor" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
<property name="interceptor" ref="aPlusContentPrepareInterceptor"></property>
<property name="typeCode" value="APlusContent"></property>
</bean>

<bean id="aPlusContentValidateInterceptor" class="com.tisl.mpl.interceptor.APlusContentValidateInterceptor" autowire="byName"></bean>
<bean id="AplusContentValidateInterceptor" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
<property name="interceptor" ref="aPlusContentValidateInterceptor"></property>
<property name="typeCode" value="APlusContent"></property>
</bean>

<!-- bulk cancellation -->
 <bean id="bulkCancellationPrepareInterceptor" class="com.tisl.mpl.interceptor.BulkCancellationPrepareInterceptor" autowire="byName"></bean>
<bean id="BulkCancellationPrepareInterceptor" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
<property name="interceptor" ref="bulkCancellationPrepareInterceptor"></property>
<property name="typeCode" value="BulkCancellation"></property>
</bean> 
<bean id="cronJobModel" class="de.hybris.platform.cronjob.model.CronJobModel" />
<bean id="cronJobService" class="de.hybris.platform.servicelayer.cronjob.CronJobService" />

<bean id="bulkCancellationDao" class="com.tisl.mpl.bulk.dao.BulkCancellationDaoImpl" />

<alias name="bulkCancellationService" alias="bulkCancellationService" />
	<bean id="bulkCancellationService"
		class="com.tisl.mpl.bulk.service.BulkCancellationServiceImpl">
		<!-- <property name="modelService" ref="modelService" /> -->
		<property name="bulkCancellationDao" ref="bulkCancellationDao" />
	</bean>
	
<!-- end bulk cancellation -->
<!-- Return Window Increase Start -->
<bean id="returnWindowIncreasePrepareInterceptor" class="com.tisl.mpl.interceptor.ReturnWindowIncreasePrepareInterceptor" autowire="byName"></bean>
<bean id="ReturnWindowIncreasePrepareInterceptor" class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
<property name="interceptor" ref="returnWindowIncreasePrepareInterceptor"></property>
<property name="typeCode" value="ReturnWindowIncrease"></property>
</bean>

<bean id="returnWindowIncreaseDao" class="com.tisl.mpl.returnwindowincrease.dao.ReturnWindowIncreaseDaoImpl"></bean>
<alias name="returnWindowIncreaseService" alias="returnWindowIncreaseService"/>
<bean id="returnWindowIncreaseService" class="com.tisl.mpl.returnwindowincrease.service.ReturnWindowIncreaseServiceImpl">
<property name="returnWindowIncreaseDao" ref="returnWindowIncreaseDao" />
</bean>


<!-- Return Window Increase End -->

<!-- TPR-1984 START -->
<bean id="npsFeedbackQuestionService" class="com.tisl.mpl.marketplacecommerceservices.service.impl.NPSFeedbackQuestionServiceImpl">
 	</bean>
 	
 <bean id="npsFeedbackQuestionDao" class="com.tisl.mpl.marketplacecommerceservices.daos.impl.NPSFeedbackQuestionDaoImpl" />
<!-- Key generator for NPS -->
	<bean id="npsIdGenerator"
		class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator"
		init-method="init" scope="tenant">
		<property name="key" value="npsId" />
		<property name="digits" value="6" />
		<property name="start" value="#{configurationService.configuration.getProperty('npsmailer.npsId.startId')}" />
		<property name="numeric" value="true" />
	</bean>
<!-- TPR-1984 END -->




	<!-- Jewellery Changes Start --> 
	
	<alias name="mplJewelleryService" alias="mplJewelleryService" />
	<bean id="mplJewelleryService" class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplJewelleryServiceImpl"
			autowire="byName">
	</bean>
	
	
	<alias name="mplJewelleryDao" alias="mplJewelleryDao" />
	<bean id="mplJewelleryDao" class="com.tisl.mpl.marketplacecommerceservices.daos.impl.MplJewelleryDaoImpl"
			autowire="byName">
	</bean>
	
	<bean id="mplJewelleryUtility" class="com.tisl.mpl.util.MplJewelleryUtility">
		<property name="mplJewelleryService" ref="mplJewelleryService" />
	</bean>
	<bean id="MplleadVariantWeightService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplleadVariantWeightServiceImpl" />
	<!-- Jewellery Changes End -->

	<!-- added for jewellery attribute mapping starts -->
	
	<alias name="defaultJewelleryAttrMapping" alias="jewelleryAttrMapping" />
	<util:map id="defaultJewelleryAttrMapping" map-class="java.util.HashMap">
		<entry key = "goldValue" 	value = "Gold" ></entry>
		<entry key = "silverValue" 	value = "Silver" ></entry>
		<entry key = "platinumValue" 	value = "Platinum" ></entry>
		<entry key = "solitaireValue" 	value = "Solitaire" ></entry>
		<entry key = "diamond"    	value = "Diamond" ></entry>
		<entry key = "gemstone"   	value = "Gems Stone" ></entry>
		<entry key = "makingcharge" value = "Making Charge" ></entry>
		<entry key = "wastagetax" 	value = "Taxes And Duties" ></entry>				

	</util:map>
	<!-- //TPR-3752 Jewel Heading Added -->
	<!-- added for jewellery attribute mapping ends -->
	
	<alias name="defaultJewelleryDescMapping" alias="jewelleryDescMapping" />
	<util:map id="defaultJewelleryDescMapping" map-class="java.util.HashMap">
	    <entry key ="stonefinejwlry1" 	value = "stonesizefinejwlry1" ></entry>
		<entry key = "stonefinejwlry2" 	value = "stonesizefinejwlry2" ></entry>
		<entry key = "stonefinejwlry3" 	value = "stonesizefinejwlry3" ></entry>
		<entry key = "stonefinejwlry4" 	value = "stonesizefinejwlry4" ></entry>	
		<entry key = "stonefinejwlry5" 	value = "stonesizefinejwlry5" ></entry>
		<entry key = "stonefinejwlry6" 	value = "stonesizefinejwlry6" ></entry>	
		<entry key = "stonefinejwlry7" 	value = "stonesizefinejwlry7" ></entry>		
		<entry key = "stonefinejwlry8" 	value = "stonesizefinejwlry8" ></entry>	
		<entry key = "stonefinejwlry9"	value = "stonesizefinejwlry9" ></entry>
		<entry key = "stonefinejwlry10" value = "stonesizefinejwlry10"></entry>	
		<entry key = "metalfinejwlry" value = "metalweightfinejwlry"  ></entry>	
		<entry key= "diamond" value= "diamondweightfinejwlry1,diamondweightfinejwlry2,diamondweightfinejwlry3,diamondweightfinejwlry4,diamondweightfinejwlry5,diamondweightfinejwlry6,diamondweightfinejwlry7"></entry>
				
					
	</util:map>
	
	
	<!-- For pancard details -->
	
	<bean id="mplPancardServiceImpl" class="com.tisl.mpl.marketplacecommerceservices.services.pancard.impl.MplPancardServiceImpl">
	</bean>
	
	
	<bean id="mplPancardDao" class="com.tisl.mpl.marketplacecommerceservices.daos.pancard.impl.MplPancardDaoImpl">
	</bean>


   <alias name="defaultmplReturnDao" alias="mplReturnDao"/>
<bean class="com.tisl.mpl.returns.dao.impl.MplReturnDaoImpl" id="defaultmplReturnDao"></bean>

    <!--bean id="nodeWarmupService" class="com.hybris.yps.nodewarmer.service.NodeWarmupService">
		<property name="warmerStrategies">
			<list>
				<bean class="com.hybris.yps.nodewarmer.warmer.impl.ComposedTypeWarmer" />
				<bean class="com.hybris.yps.nodewarmer.warmer.impl.EnumerationTypesWarmer" />
				<bean class="com.hybris.yps.nodewarmer.warmer.impl.PageWarmer">
					<property name="hostname"
						value="#{configurationService.configuration.getProperty('nodewarmer.test.http.host')}" />
					<property name="throwExceptionOnFailure" value="true" />
					<property name="urls">
						<list>
							<value>/</value>
						</list>
					</property>
				</bean>
			</list>
		</property>

	</bean> -->
	<!-- Old Cron Job Deletion Logic ends: -->



	<!-- Node Warmer Changes: -->
	
	
	<!-- getPointService Thread lock fix -->
	<alias name="mplPickupAvailabilityStrategy" alias="pickupAvailabilityStrategy"/>
	<bean id="mplPickupAvailabilityStrategy"
			class="com.tisl.mpl.marketplacecommerceservices.strategy.impl.ExtDefaultPickupAvailabilityStrategy">
		<property name="pickupStrategy" ref="pickupStrategy"/>
		<property name="stockLevelProductStrategy" ref="stockLevelProductID"/>
		<property name="storePickupDao" ref="storePickupDao"/>

	</bean>
	<bean id="mplDeliveryAddressServiceImpl"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplDeliveryAddressServiceImpl"/>
<bean id="mplDeliveryAddressDaoImpl"
		class="com.tisl.mpl.marketplacecommerceservices.daos.changedeliveryaddress.impl.MplDeliveryAddressDaoImpl">
</bean>
  <!--  R2.3 Added 27-02-2017 Start-->
  <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="-1" />
		<property name="defaultEncoding" value="utf8" />
	 </bean>
	 <!--  R2.3 Added 27-02-2017 END-->
	 
	 <!-- Addition for Exchange Start  -->
<bean id="exchangeGuideService"
		class="com.tisl.mpl.marketplacecommerceservices.service.impl.ExchangeGuideServiceImpl">
		<property name="exchangeGuideDao" ref="exchangeGuideDao"></property>
		<property name="modelService" ref="modelService" />
	</bean>
	
	<bean id="exchangeGuideDao"
		class="com.tisl.mpl.marketplacecommerceservices.daos.impl.ExchangeGuideDaoImpl">
	</bean>
	
	
		
	<bean id="temporaryExchangeId"
		class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator"
		init-method="init" scope="tenant">
		<property name="key" value="tempExchangeId" />
		<property name="digits" value="8" />
		<property name="start" value="10000001" />
		<property name="numeric" value="false" />
	</bean>
	
	<bean id="EXCHANGEREQUESTID"
		class="de.hybris.platform.servicelayer.keygenerator.impl.PersistentKeyGenerator"
		init-method="init" scope="tenant">
		<property name="key" value="tempExchangeId" />
		<property name="digits" value="8" />
		<property name="start" value="10000001" />
		<property name="numeric" value="false" />
	</bean>
	
	<!-- Addition for Exchange End 	-->
	 
	 
	 <!-- Changes for CAR-267 -->
   
   <!-- <bean id="promotions.manager" class="de.hybris.platform.promotions.jalo.CachingPromotionsManager" init-method="init" destroy-method="destroy" scope="tenant" >
    	  <property name="cache" ref="promotionsCachingStrategy"/>
	</bean>
	
	<bean id="mplMemcachedClientHelper" class="com.tisl.mpl.cache.strategy.MplMemcachedClientHelper" >
	<constructor-arg value = "${promotion.memcache.env.ip}"/>
	 </bean>
	 <alias alias="promotionsCachingStrategy" name="defaultPromotionsCachingStrategy"/>
		<bean id="defaultPromotionsCachingStrategy" class="com.tisl.mpl.cache.strategy.MplDefaultCachingStrategy" scope="tenant"> 
		<property name="memCacheEnabled" value="${promotion.memcache.enabled}"/>
	</bean>  -->

	
    <!-- Override the Cart so that calls to get promotion results can be intercepted -->
   

       <!--<bean id="de.hybris.platform.jalo.order.Cart" class="de.hybris.platform.promotions.jalo.order.PromotionCart" scope="prototype" />-->

    <!-- <bean id="de.hybris.platform.jalo.order.Cart" class="de.hybris.platform.promotions.jalo.order.PromotionCart" scope="prototype" /> -->


    <!-- CACHING FINISH -->
     <!-- CAR-285 Start Zipping XML Creation and Copying Job Sitemap Start -->
    <bean id="siteMapZipperJob" class="com.tisl.mpl.sitemap.generator.impl.SiteMapZipperJob"
		parent="abstractJobPerformable">
			<property name="modelService" ref="modelService" />
			</bean>
    
    <!-- CAR-285 End -->
    
    	 
 	 <!-- //Added for 3782 -->
 	<alias name="productJwelConverter" alias="productJwelConverter"/>
 	<bean id="productJwelConverter" parent="abstractPopulatingConverter">
 		<property name="targetClass" value="de.hybris.platform.commercefacades.product.data.ProductData"/>
 		<property name="populators">
 			<list>
 				<ref bean="productPopulator"/>
 			</list>
 		</property>
 	</bean>
 	<!-- //Added for 3782 -->
    <bean id="catalogUtils" class="com.tisl.mpl.util.CatalogUtils" />
    

    <!-- added for PR-4 -->
    <bean id="SendRefundSmsCronJob"
		class="com.tisl.mpl.marketplacecommerceservices.jobs.SendRefundSmsCronJob"
		autowire="byName">
	</bean>
<!-- added for PR-4 -->
    <bean id="mplPincodeDistanceService" class="com.tisl.mpl.marketplacecommerceservices.service.impl.MplPincodeDistanceServiceImpl" ></bean>
    <bean id="mplDistanceMatrixUtility" class="com.tisl.mpl.util.DistanceMatrixUtility" />
    
    <!--  TPR-6945 Near Real time Stock and Price changes in PLP and PDP -->
    
	<bean id="productSpecificIndexerCronJob"
		class="com.tisl.mpl.marketplacecommerceservices.jobs.ProductSpecificIndexerCronJob"
		autowire="byName">
	</bean>   
    
	<bean id="solrSlaveReplicatorJob"
		class="com.tisl.mpl.marketplacecommerceservices.jobs.SolrSlaveReplicatorJob"
		autowire="byName">
		<property name="solrCoreNameResolver" ref="solrCoreNameResolver" />
	</bean>
	
	<bean id="akamaiRefreshCronJob"
		class="com.tisl.mpl.marketplacecommerceservices.jobs.AkamaiRefreshCronJob"
		autowire="byName">
	</bean>
	
	<!--  End TPR-6945 -->

    
</beans>


<?xml version="1.0" encoding="UTF-8"?>
<!-- [y] hybris Platform Copyright (c) 2000-2013 hybris AG All rights reserved. 
	This software is the confidential and proprietary information of hybris ("Confidential 
	Information"). You shall not disclose such Confidential Information and shall 
	use it only in accordance with the terms of the license agreement you entered 
	into with hybris. -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- The hybris platform provides one single Spring application context 
		for beans located at the jalo layer. Each extension can add beans to this 
		context by specifying them at this configuration file. You can use and/or 
		redefine beans defined at configuration files of other extensions as well 
		as adding new one. If you want to locate this file at a different location 
		or want to use several files for better, structuring, please use the '<yourextension>.application-context' 
		property at your project.properties file. There you can specify a comma separated 
		list of files where first is tried to find a file per classpath and then 
		per file system. If you want to configure beans for your web module please 
		have a look at your web/webroot/WEB-INF/<extname>-web-spring.xml. -->

	<!-- Example how to override a manager -->
	<!-- <bean id="core.productManager" class="com.tisl.mpl.jalo.MarketplaceclientservicesProductManager" 
		init-method="init" destroy-method="destroy" /> -->


	<!-- Example how to configure the class to use for jalo session creation -->
	<!-- <bean id="jalosession" class="de.hybris.platform.jalo.JaloSessionFactory"> 
		<property name="targetClassName" value="com.tisl.mpl.jalo.MarketplaceclientservicesJaloSession"/> 
		</bean> -->


	<!-- Example how to override an item -->
	<!-- <bean id="de.hybris.platform.jalo.product.Product" class="com.tisl.mpl.jalo.MarketplaceclientservicesProduct" 
		scope="prototype" /> -->

	<!-- Example how to register and use an AOP aspect Also see http://static.springframework.org/spring/docs/2.5.x/reference/aop.html -->

	<!-- <bean id="marketplaceclientservicesProfBean" class="com.tisl.mpl.aop.MarketplaceclientservicesProfilingAspect"/> 
		<aop:config proxy-target-class="true"> <aop:aspect id="marketplaceclientservicesProfAspect" 
		ref="marketplaceclientservicesProfBean" > <aop:pointcut id="profiledMethods" 
		expression="execution(* getModificationTime(..))" /> <aop:around pointcut-ref="profiledMethods" 
		method="profile" /> </aop:aspect> </aop:config> -->


	<!-- some other examples of a pointcut that matches everything: <aop:pointcut 
		id="profiledMethods" expression="bean(de.hybris.platform.jalo.user.Customer) 
		&amp;&amp; !execution(* getPK(..))" /> <aop:pointcut id="profiledMethods" 
		expression="execution(* *(..))" /> -->

	<bean id="sendEmailService" class="com.tisl.mpl.email.MplSendEmailService" />
	<bean id="sendSMSService" class="com.tisl.mpl.sms.MplSendSMSService" />
	<bean id="sendTicketService" class="com.tisl.mpl.ticket.SendTicketService" />

	<!-- Integration Pin code and Delivery mode OMS -->
	<bean id="pinCodeDeliveryModeService" class="com.tisl.mpl.service.PinCodeDeliveryModeServiceImpl"
		scope="tenant">
		<!-- <property name="pinCodeDeliveryModeConverter" ref="pinCodeDeliveryModeConverter" 
			/> -->
	</bean>

	<!-- <bean id="pinCodeDeliveryModeConverter" parent="abstractPopulatingConverter" 
		scope="tenant"> <lookup-method name="createTarget" bean="pincodeServiceabilityCheck" 
		/> <property name="populators"> <list> <ref bean="pinCodeDeliveryModeServicePopulator" 
		/> </list> </property> </bean> <bean id="pinCodeDeliveryModeServicePopulator" 
		class="com.tisl.mpl.populators.PinCodeDeliveryModeServicePopulator" scope="tenant"> 
		</bean> -->
	<!-- Prototype Beans for Data POJOs -->
	<!-- <bean name="pincodeServiceabilityCheck" class="com.hybris.oms.api.comm.dto.PincodeServiceabilityCheck" 
		scope="prototype" /> -->
	<!-- Integration Pin code and Delivery mode, OMS Service Call ENDS -->

	<!-- Customer Create -->
	<bean id="mplCustomerWebService" class="com.tisl.mpl.service.MplCustomerWebServiceImpl" />
	<!-- Rating and Review changes -->
	<!-- Rating and Review changes -->
	<bean id="GigyaService" class="com.tisl.mpl.service.impl.GigyaServiceImpl">
		<property name="apikey"
			value="#{configurationService.configuration.getProperty('gigya.apikey')}" />
		<property name="secretkey"
			value="#{configurationService.configuration.getProperty('gigya.secretkey')}" />
		<property name="use"
			value="#{configurationService.configuration.getProperty('gigya.use')}" />
		<property name="domain"
			value="#{configurationService.configuration.getProperty('gigya.domain')}" />
		<property name="proxyPort"
			value="#{configurationService.configuration.getProperty('proxy.port')}" />
		<property name="proxyEnabled"
			value="#{configurationService.configuration.getProperty('proxy.enabled')}" />
		<property name="proxyAddress"
			value="#{configurationService.configuration.getProperty('proxy.address')}" />
	</bean>

	<!-- Order Create -->
	<alias name="orderWebService" alias="orderWebService" />
	<bean id="orderWebService" class="com.tisl.mpl.service.OrderWebServiceImpl" />
	<!-- Order Create -->
	<!-- Inventory Reservation reservation at Checkout -->
	<bean id="inventoryReservationService" class="com.tisl.mpl.service.InventoryReservationServiceImpl" />
	<!-- Inventory Reservation reservation at Checkout -->
	<bean id="merchantMasterWebService" class="com.tisl.mpl.service.MerchantMasterWebServiceImpl" />
	<!-- AWBStatusRequest/Response -->
	<bean id="mplAwbStatusService" class="com.tisl.mpl.service.MplAwbStatusServiceImpl" />
	<!-- AWBStatusRequest/Response Ends Here -->
	<bean id="mplClientAccountAddressDao" class="com.tisl.mpl.daos.MplClientAccountAddressDaoImpl" />
	<bean id="mplClientAccountAddressService" class="com.tisl.mpl.service.MplClientAccountAddressServiceImpl" />
	<!-- Ticket Create -->
	<bean id="ticketCreate" class="com.tisl.mpl.service.TicketCreationCRMserviceImpl" />
	
	
	<bean id="refundsms" class="com.tisl.mpl.refunds.dao.RefundSmsDaoImpl" autowire="byName"/>
	
	
	
	<!-- Refund Info -->
	<bean id="mplRefundStatusService" class="com.tisl.mpl.service.MplRefundStatusServiceImpl" />
	<bean id="mplOrderCancelClientService" class="com.tisl.mpl.service.MplOrderCancelClientServiceImpl" />
	<!-- SNS Mobile Push Notification -->
	<bean id="mplSNSMobilePushService"
		class="com.tisl.mpl.sns.push.service.impl.MplSNSMobilePushServiceImpl" />
	<bean id="snsClientWrapper" class="com.tisl.mpl.sns.push.tools.MplAmazonSNSClientWrapper" />

	<bean id="mplSNSMobilePushDao" class="com.tisl.mpl.sns.push.dao.impl.MplSNSMobilePushDaoImpl" />
	<!-- SNS Mobile Push Notification -->
	<!-- payment info reversal -->

	<!-- <bean id="paymentInfoRevWebService" class="com.tisl.mpl.service.PaymentInfoRevWebServiceImpl" 
		/> <bean id="paymentInfoCancelService" class="com.tisl.mpl.service.PaymentInfoCancelReversalImpl" 
		/> -->

	<!-- <bean id="ordercreation" class="com.tisl.mpl.service.MplSendOrderFromCommerceToCRMImpl" 
		/> -->

	<!-- <bean id="cancellableService" class="com.tisl.mpl.service.CancellableServiceImpl" 
		/> <bean id="returnLogistics" class="com.tisl.mpl.service.ReturnLogisticsServiceImpl" 
		/> <bean id="mplClickToCallService" class="com.tisl.mpl.service.MplClickToCallWebServiceImpl" 
		/> <bean id="gigyaCommentService" class="com.tisl.mpl.service.MplGigyaReviewCommentServiceImpl" 
		/> <bean id="mplGigyaReviewCommentDao" class="com.tisl.mpl.review.daos.impl.MplGigyaReviewCommentDaoImpl" 
		/> -->

	<!-- UF-258 -->
	<bean id="STWService" class="com.tisl.mpl.service.impl.STWWidgetServiceImpl">
		<property name="use"
			value="#{configurationService.configuration.getProperty('stw.use')}" />
		<property name="domain"
			value="#{configurationService.configuration.getProperty('stw.domain')}" />
		<property name="method"
			value="#{configurationService.configuration.getProperty('stw.recomendation.method')}" />
		<property name="proxyPort"
			value="#{configurationService.configuration.getProperty('proxy.port')}" />
		<property name="proxyEnabled"
			value="#{configurationService.configuration.getProperty('proxy.enabled')}" />
		<property name="proxyAddress"
			value="#{configurationService.configuration.getProperty('proxy.address')}" />
	</bean>


	<bean id="paymentInfoRevWebService" class="com.tisl.mpl.service.PaymentInfoRevWebServiceImpl" />
	<bean id="paymentInfoCancelService" class="com.tisl.mpl.service.PaymentInfoCancelReversalImpl" />

	<bean id="ordercreation" class="com.tisl.mpl.service.MplSendOrderFromCommerceToCRMImpl" />

	<bean id="cancellableService" class="com.tisl.mpl.service.CancellableServiceImpl" />
	<bean id="returnLogistics" class="com.tisl.mpl.service.ReturnLogisticsServiceImpl" />
	<bean id="mplClickToCallService" class="com.tisl.mpl.service.MplClickToCallWebServiceImpl" />
	<bean id="gigyaCommentService" class="com.tisl.mpl.service.MplGigyaReviewCommentServiceImpl" />
	<bean id="mplGigyaReviewCommentDao"
		class="com.tisl.mpl.review.daos.impl.MplGigyaReviewCommentDaoImpl" />

	<!-- for pancard changes -->

	<!-- <bean id="mplPancardTicketCRMserviceImpl" class="com.tisl.mpl.service.impl.MplPancardTicketCRMserviceImpl"/> -->

	<bean id="mplPancardUploadserviceImpl" class="com.tisl.mpl.service.impl.MplPancardUploadserviceImpl" />

	<bean id="googleShortUrlService" class="com.tisl.mpl.shorturl.service.ShortUrlServiceGoogleImpl" />

	<bean id="shortUrlReportDaoImpl" class="com.tisl.mpl.shorturl.report.dao.OrderShortUrlDaoImpl" />

	<!-- TPR-5667 -->
	<bean id="mplSendOrderFromCommerceToSamsung"
		class="com.tisl.mpl.service.impl.MplSendOrderFromCommerceToSamsungImpl" />

	<bean id="mplWalletServices" class="com.tisl.mpl.service.impl.MplWalletServicesImpl"/>

	<bean id="mplQCInitDataImpl" class="com.tisl.mpl.daos.impl.MplQCInitDataImpl" />

	<bean id="qcInitDataBean" class="com.tisl.mpl.service.QCInitDataBean" />

	<bean id="mplWalletInitPopulator" class="com.tisl.mpl.populators.MplWalletInitPopulator"  />

	<bean id="mplWalletInitConvertor" parent="abstractPopulatingConverter">

		<property name="populators">
			<list>
				<ref bean="mplWalletInitPopulator" />
			</list>
		</property>
		<property name="targetClass" value="com.tisl.mpl.service.QCInitDataBean" />
	</bean>

<!-- 	 <bean id="mplQCInitService" class="com.tisl.mpl.service.MplQCInitServiceImpl"> -->
<!-- 	 <property name="mplWalletInitConvertor" ref="mplWalletInitConvertor" /> -->
<!-- 	 </bean>  -->

		<!-- Added for TPR-5989 -->
		<bean id="clientIntegration" class="com.tisl.mpl.service.ClientIntegrationImpl" /> 
		
</beans>


<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2015 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
        
    <context:annotation-config/>

	<bean id="yAcceleratorCockpitsSystemSetup" class="com.tisl.mpl.cockpits.setup.CockpitSystemSetup"  parent="abstractCoreSystemSetup"/>

	<alias alias="marketplacecockpitsLabelLocator" name="defaultYacceleratorcockpitsLabelLocator" />
	<bean id="defaultYacceleratorcockpitsLabelLocator" class="de.hybris.platform.cockpit.util.ConfigurableCockpitLabelLocator" scope="singleton" lazy-init="false">
		<property name="resourceFolder" value="/marketplacecockpits/cockpit/localization/"/>
	</bean>

	<alias alias="cmsPreviewService" name="defaultCMSCockpitLivePreviewService" />
	<bean id="defaultCMSCockpitLivePreviewService"
		class="com.tisl.mpl.cockpits.cmscockpit.services.impl.DefaultCMSCockpitLivePreviewService"
		parent="defaultCMSPreviewService" >
	</bean>

	<alias alias="imageMediaPredefinedValuesStrategy" name="defaultImageMediaPredefinedValuesStrategy"/>
	<bean id="defaultImageMediaPredefinedValuesStrategy" class="com.tisl.mpl.cockpits.cockpit.wizard.strategies.DefaultImageMediaPredefinedValuesStrategy" >
		<property name="mediaService" ref="mediaService"/>
		<property name="mediaFolderName" value="images"/>
	</bean>
	
	<!-- *************************  TIS-280 *************************** -->
	<alias alias="csCheckoutService" name="MarketplaceDefaultCsCheckoutService"/>
	<bean name="MarketplaceDefaultCsCheckoutService" class="com.tisl.mpl.cockpits.cscockpit.services.impl.MarketplaceDefaultCsCheckoutService"
	      parent="defaultCsCheckoutService">
	      <property name="deliveryModeRequired" value="false"/>
	      <property name="lineItemDeliveryModeRequired" value="true"/>
	      <property name="otpValidationRequired" value="true"/>
	   
	</bean>
	<!-- ***************************  TIS-280 End ********************** -->
	
	<alias name="accRecipientTypeToContextClassMap" alias="recipientTypeToContextClassMap"/>
	<util:map id="accRecipientTypeToContextClassMap">
		<entry>
			<key><util:constant static-field="de.hybris.platform.ticket.enums.CsEmailRecipients.CUSTOMER"/></key>
			<value>com.tisl.mpl.cockpits.ticket.email.context.AcceleratorCustomerTicketContext</value>
		</entry>
		<entry>
			<key><util:constant static-field="de.hybris.platform.ticket.enums.CsEmailRecipients.ASSIGNEDAGENT"/></key>
			<value>de.hybris.platform.ticket.email.context.AgentTicketContext</value>
		</entry>
		<entry>
			<key><util:constant static-field="de.hybris.platform.ticket.enums.CsEmailRecipients.ASSIGNEDGROUP"/></key>
			<value>de.hybris.platform.ticket.email.context.AgentGroupTicketContext</value>
		</entry>
	</util:map>
   <!--commenting to have backword comptability 
	<bean id="employeeValidateInterceptor" class="com.tisl.mpl.cockpits.cscockpit.services.impl.EmployeeValidateInterceptor"
      autowire="byName"/>
      
    <bean id="employeeValidateInterceptorMapping" 
      class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
    	<property name="interceptor" ref="employeeValidateInterceptor"/>
    	<property name="typeCode" value="employee"/>
	</bean>
	--> 

	<bean id="manualRefundOrderStatusInterceptor"
		class="com.tisl.mpl.interceptor.ManualRefundOrderStatusInterceptor"
		autowire="byName" />

	<bean id="manualRefundOrderStatusInterceptorMapping"
		class="de.hybris.platform.servicelayer.interceptor.impl.InterceptorMapping">
		<property name="interceptor" ref="manualRefundOrderStatusInterceptor" />
		<property name="typeCode" value="Consignment" />
	</bean>

	
	<!-- Refund Initiated Notification Email  -->	
	<alias name="refundInitiatedNotificationService" alias="refundInitiatedNotificationService" />
	<bean id="refundInitiatedNotificationService"
		class="com.tisl.mpl.cockpits.cscockpit.services.impl.DefaultRefundInitiatedNotificationService">
	</bean>
	<bean id="addressHistoryService"
		class="com.tisl.mpl.cockpits.cscockpit.services.impl.AddressHistoryServiceimpl">
	</bean>

        
</beans>
